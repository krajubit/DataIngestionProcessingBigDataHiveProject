[
{
  "pk": 23956, 
  "model": "desktop.document2", 
  "fields": {
    "search": "/****************************Problem Statement and Purpose*********************************/\n/*******The New York City Taxi & Limousine Commission (TLC) has provided a dataset of trips made by the taxis in the New York city.**********/\n/*******The detailed trip-level data is more than just a vast list of taxi pickup and drop off coordinates.**********/\n/*****The purpose of this dataset is to get a better understanding of the taxi system, so that the city can improve the efficiency of in-city commutes.***/\n\n/******************Data Understanding*********************************/\n/**The records include fields capturing pick-up and drop-off dates/times, pick-up and drop-off locations (location coordinates of the starting and ending points), **/\n/***trip distances, itemized fares, rate types, payment types, driver-reported passenger counts etc. **/\n\n/*****************The dataset has been placed in the HDFS storage of the lab. The path to the data files is as follows: **********/\n/*******November data: '/common_folder/nyc_taxi_data/nov/' **********/\n/*******December data: '/common_folder/nyc_taxi_data/dec/' **********/\n\n\n/************************ Schema Creation for Data Set ******************************/\n\n\n/* IMPORTANT: BEFORE CREATING ANY TABLE, MAKE SURE YOU RUN THIS COMMAND */\nADD JAR /opt/cloudera/parcels/CDH/lib/hive/lib/hive-hcatalog-core-1.1.0-cdh5.11.2.jar;\n\n/******** Following type of Schemas can be created for data set analysis *****************/\n/****** 1. Create plain External table using file parent directory to load all the data in subdirectories in the table ******/\n/****** 2. Create External table with partition option pointing to local location for storing partioned data ******/\n/****** 3. Create External table with partition and orc option pointing to local location for storing partioned data ******/\n/****** 4. Create External table with partition and clustering option pointing to local location for storing partioned  ******/\n/****** 5. Create External table with partition,clustering and orc option pointing to local location for storing partioned data ******/\n\n/*******Run following Set commands to allow creation of table from data in multiple sub directories *****************/\nset hive.input.dir.recursive=true;\nset hive.mapred.supports.subdirectories=true;\nset hive.supports.subdirectories=true;\nset mapreduce.input.fileinputformat.input.dir.recursive=true; \n\n/***** table will be dropped if exists **********/\ndrop table rk_hive_test_db.nyc_taxi_data_rk;\n\n/****************************Schema Type 1 : No Partition Table *************************************************/\n/****** Create plain External table using file parent directory to load all the data in subdirectories in the table ******/\n\ncreate external table if not exists rk_hive_test_db.nyc_taxi_data_rk(VendorID int,tpep_pickup_datetime timestamp,tpep_dropoff_datetime timestamp,passenger_count int, trip_distance float,RatecodeID array<int>,store_and_fwd_flag string,PULocationID int,DOLocationID int,payment_type array<int>,fare_amount float,extra float,mta_tax float,tip_amount float,tolls_amount float,improvement_surcharge float,total_amount float)\n    COMMENT 'NYC Taxi Data'\n    ROW FORMAT DELIMITED\n    FIELDS TERMINATED BY ','\n    STORED AS TEXTFILE\n    LOCATION '/common_folder/nyc_taxi_data';\n\t\n/*****Describe created table\t*************/\ndescribe rk_hive_test_db.nyc_taxi_data_rk;\n/***************************************************\n1\tvendorid\tint\t\n2\ttpep_pickup_datetime\ttimestamp\t- 0 null\n3\ttpep_dropoff_datetime\ttimestamp\t- 0 null\n4\tpassenger_count\tint\t- 0 null\n5\ttrip_distance\tfloat\t- 0 null\n6\tratecodeid\tarray<int>\t\n7\tstore_and_fwd_flag\tstring\t\n8\tpulocationid\tint\t\n9\tdolocationid\tint\t\n10\tpayment_type\tarray<int>\t\n11\tfare_amount\tfloat\t\n12\textra\tfloat\t\n13\tmta_tax\tfloat\t\n14\ttip_amount\tfloat\t\n15\ttolls_amount\tfloat\t\n16\timprovement_surcharge\tfloat\t\n17\ttotal_amount\tfloat\t\n/***************************************************\n\n/******Get the total counts ******************************/\nselect count(*) from rk_hive_test_db.nyc_taxi_data_rk;\n/***Total row count : 18793083 ********************/\n\n/****************************Schema Type 2 : Partition Table *************************************************/\n/****** Create External table with partition option pointing to local location for storing partioned data ******/\n\n/**************** Deciding fields for partition *******************************/\n/**** Based upon problem statement and analysis question, most of the time we will be using year and month as filter conditions in where clause, **/\n/**********So we will use year and month as partitions to improve query performance based upon year and monthS****************************/\n\n/************Create the folder to store partition data and give full access *******************/\t\n\n/*************************************************************\tCreate it if path does not exist********\nhadoop fs -mkdir /user/hive/warehouse/rknyctaxidata\nhadoop fs -chmod 777  /user/hive/warehouse/rknyctaxidata\nhadoop fs -ls /user/hive/warehouse/rknyctaxidata\n*************************************************************************/\t\n\n/*******Run following Set commands to allow creation of table using partitions *****************/\nSET hive.exec.max.dynamic.partitions=1000;\nSET hive.exec.max.dynamic.partitions.pernode=1000;\nSET hive.exec.dynamic.partition = true;\nSET hive.exec.dynamic.partition.mode = nonstrict;\n\n/***** table will be dropped if exists **********/\ndrop table nyc_taxi_data_partition_rk;\n\n/* Then create external table */\ncreate external table if not exists rk_hive_test_db.nyc_taxi_data_partition_rk(VendorID int,tpep_pickup_datetime timestamp,tpep_dropoff_datetime timestamp,passenger_count int, trip_distance float,RatecodeID array<int>,store_and_fwd_flag string,PULocationID int,DOLocationID int,payment_type array<int>,fare_amount float,extra float,mta_tax float,tip_amount float,tolls_amount float,improvement_surcharge float,total_amount float) partitioned by (yr int, mnth int)\nlocation '/user/hive/warehouse/rknyctaxidata';\n\n/* Then insert the data in the table */\ninsert overwrite table nyc_taxi_data_partition_rk partition(yr, mnth)\nselect VendorID ,tpep_pickup_datetime ,tpep_dropoff_datetime ,passenger_count , trip_distance ,RatecodeID ,store_and_fwd_flag ,PULocationID ,DOLocationID ,payment_type ,fare_amount ,extra ,mta_tax ,tip_amount ,tolls_amount ,improvement_surcharge ,total_amount , year(tpep_pickup_datetime) as yr, month(tpep_pickup_datetime) as mnth\nfrom nyc_taxi_data_rk;\n\n/******Get the total counts ******************************/\nselect count(*) from nyc_taxi_data_partition_rk;\n/***Total row count : 18793083 ********************/\n\n/****************************Schema Type 3 : Partition with ORC *************************************************/\n/****** Create External table with partition and orc option pointing to local location for storing partioned data ******/\n\n/************Create the folder to store partition data and give full access *******************/\n/*************************************************************\tCreate it if path does not exist\nhadoop fs -mkdir /user/hive/warehouse/rkorcnyctaxidata\nhadoop fs -chmod 777  /user/hive/warehouse/rkorcnyctaxidata\nhadoop fs -ls /user/hive/warehouse/rkorcnyctaxidata\n**********************************************************/\n\n\n/***** table will be dropped if exists **********/\ndrop table nyc_taxi_data_partition_orc_rk;\n\n/* Then create external table */\ncreate external table if not exists rk_hive_test_db.nyc_taxi_data_partition_orc_rk(VendorID int,tpep_pickup_datetime timestamp,tpep_dropoff_datetime timestamp,passenger_count int, trip_distance float,RatecodeID array<int>,store_and_fwd_flag string,PULocationID int,DOLocationID int,payment_type array<int>,fare_amount float,extra float,mta_tax float,tip_amount float,tolls_amount float,improvement_surcharge float,total_amount float) partitioned by (yr int, mnth int)\nstored as orc location '/user/hive/warehouse/rkorcnyctaxidata'\ntblproperties (\"orc.compress\"=\"SNAPPY\");\n\n/* Then insert the data in the table */\ninsert overwrite table nyc_taxi_data_partition_orc_rk partition(yr , mnth) select * from nyc_taxi_data_partition_rk;\n\n/******Get the total counts ******************************/\nselect count(*) from nyc_taxi_data_partition_orc_rk;\n/***Total row count : 18793083 ********************/\n\n/****************************Schema Type 4 : Partition Table with Clustering *************************************************/\n/****** Create External table with partition and clustering option pointing to local location for storing partioned  ******/\n\n/********** Determining number of clusters required *************/\n/*** Todate Data size for both files : 781 MB + 799 MB = 1580 MB ***/\n/*** Assuming One Block  Size = 128 MB = 12  ***/\n/*** Total  Number of Clusters required = 1580/128 = 12 *******/\n\n/********** Deciding on  clusters column *************/\n/******We need to run couple of queries using  pick up date and since their are many dates, we will use it as a cluster field for bucketing ************/\n\n/************Create the folder to store partition data and give full access *******************/\n/*************************************************************\tCreate it if path does not exist\t\nhadoop fs -mkdir /user/hive/warehouse/rkclusparnyctaxidata\nhadoop fs -chmod 777  /user/hive/warehouse/rkclusparnyctaxidata\nhadoop fs -ls /user/hive/warehouse/rkclusparnyctaxidata\n******************************************************************************************/\n\n/***** table will be dropped if exists **********/\ndrop table nyc_taxi_data_partition_clus_rk;\n\n/* Then create external table */\n\tcreate external table if not exists rk_hive_test_db.nyc_taxi_data_partition_clus_rk(VendorID int,tpep_pickup_datetime timestamp,tpep_dropoff_datetime timestamp,passenger_count int, trip_distance float,RatecodeID array<int>,store_and_fwd_flag string,PULocationID int,DOLocationID int,payment_type array<int>,fare_amount float,extra float,mta_tax float,tip_amount float,tolls_amount float,improvement_surcharge float,total_amount float) partitioned by (yr int, mnth int) clustered by (tpep_pickup_datetime) into 12 buckets\n    location '/user/hive/warehouse/rkclusparnyctaxidata';\n\n/* Then insert the data in the table */\ninsert overwrite table nyc_taxi_data_partition_clus_rk partition(yr , mnth) select * from nyc_taxi_data_partition_rk;\n\n/******Get the total counts ******************************/\nselect count(*) from nyc_taxi_data_partition_clus_rk;\n/***Total row count : 18793083 ********************/\n\n\n/****************************Schema Type 5 : Partition Table with Clustering and ORC *************************************************/\n/****** Create External table with partition,clustering and orc option pointing to local location for storing partioned data  ******/\n\n/************Create the folder to store partition data and give full access *******************/\t\n/*************************************************************\tCreate it if path does not exist\nhadoop fs -mkdir /user/hive/warehouse/rkclusorcnyctaxidata\nhadoop fs -chmod 777  /user/hive/warehouse/rkclusorcnyctaxidata\nhadoop fs -ls /user/hive/warehouse/rkclusorcnyctaxidata\n******************************************************************************************/\n\n/***** table will be dropped if exists **********/\ndrop table nyc_taxi_data_part_clus_orc_rk;\n\n/* Then create external table */\n\tcreate external table if not exists rk_hive_test_db.nyc_taxi_data_part_clus_orc_rk(VendorID int,tpep_pickup_datetime timestamp,tpep_dropoff_datetime timestamp,passenger_count int, trip_distance float,RatecodeID array<int>,store_and_fwd_flag string,PULocationID int,DOLocationID int,payment_type array<int>,fare_amount float,extra float,mta_tax float,tip_amount float,tolls_amount float,improvement_surcharge float,total_amount float) partitioned by (yr int, mnth int) clustered by (tpep_pickup_datetime) into 12 buckets\n   stored as orc location '/user/hive/warehouse/rkclusorcnyctaxidata'\n   tblproperties (\"orc.compress\"=\"SNAPPY\");\n\n/* Then insert the data in the table */\ninsert overwrite table nyc_taxi_data_part_clus_orc_rk partition(yr , mnth) select * from nyc_taxi_data_partition_rk;\n\n/******Get the total counts ******************************/\nselect count(*) from nyc_taxi_data_part_clus_orc_rk;\n/***Total row count : 18793083 ********************/\n\n/*********** Schema  Creation is complete ******************************/\n/******** Table nyc_taxi_data_part_clus_orc_rk shoud be more performing table as its a partitioned with clustering and ORC option ************/\n\n\n/*************** Basic Data Quality Checks **************************************************/\n\n\t\n/******Get the total counts ******************************/\nselect count(*) from rk_hive_test_db.nyc_taxi_data_part_clus_orc_rk;\n/***Total row count : 18793083 ********************/\n\n/******Get the total counts when vendor id is not null******************************/\nselect count(*) from rk_hive_test_db.nyc_taxi_data_part_clus_orc_rk where vendorid is not null;\n/***Total row count when vendor id is not null : 18793079 ********************/\n\n/******Get the total counts when vendor id is null******************************/\nselect count(*) from rk_hive_test_db.nyc_taxi_data_part_clus_orc_rk where vendorid is null;\n/***Total row count when vendor id is null : 4 ********************/\n \n/******Get the total counts of distinct vendor id ******************************/\nselect count(Distinct vendorid) from rk_hive_test_db.nyc_taxi_data_part_clus_orc_rk where vendorid is not null;\n/***Total unique vendor id count is  : 2 ********************/\n/**** 1= Creative Mobile Technologies, LLC; 2= VeriFone Inc *************/\n\n/*************How many records has each TPEP provider provided? Write a query that summarises the number of records of each provider. **************/\n\nselect VendorID,count(*) from rk_hive_test_db.nyc_taxi_data_part_clus_orc_rk where vendorid is not null group by VendorID;\n/*****************\n2\t\t10345930\nnull\t2\n1\t\t8447149\n******************/\n\n/********************Below are the List of queries ran for checking Data Quality issues and understanding the Data distribution *************/\n\n/*** Check the trip count grouped  by vendorid,year(tpep_dropoff_datetime) ***************/\n select vendorid, year(tpep_dropoff_datetime), count (*) from rk_hive_test_db.nyc_taxi_data_part_clus_orc_rk \nwhere vendorid is not null group by vendorid,year(tpep_dropoff_datetime);\n\n/*********************\n1\t1\t2019\t1\n2\t2\t2041\t1\n3\t2\t2017\t10344589\n4\t2\t2018\t1268\n5\t2\t2001\t1\n6\t2\t2003\t4\n7\t2\t2008\t15\n8\t2\t2009\t52\n9\t1\t2016\t1\n10\t1\t2017\t8446659\n11\t1\t2018\t488\n***********************/\n\n/*********** year 2041 is invalid and bad data *******************/\n/*********It includes  data from years other than 2017 also. We need to analyse data only for 2017**********/\n\n/***********Check the count of trips where either of date is not from year 2017 ************************/\nselect vendorid,year(tpep_pickup_datetime),year(tpep_dropoff_datetime) from rk_hive_test_db.nyc_taxi_data_part_clus_orc_rk \nwhere vendorid is not null and (year(tpep_pickup_datetime) <> 2017 or year(tpep_dropoff_datetime) <> 2017);\n\n/***** 1831 records are such that where either tpep_pickup_datetime or tpep_dropoff_datetime is not from year 2017 *********/\n/***For our analysis purpose we will assume that only those records are eligible for analysis where both tpep_pickup_datetime and tpep_dropoff_datetime are from 2017 ***/\n\n/*******Check tpep_pickup_datetime date range ***************************/\nselect max(tpep_pickup_datetime),min(tpep_pickup_datetime) from rk_hive_test_db.nyc_taxi_data_part_clus_orc_rk where vendorid is not null;\n/***** 2041-11-15 02:57:16.0\t2001-01-01 00:04:13.0 ***********/\n\n\n\n/*************From here onwards, our analysis of data quality check and understanding will be limited to year 2017 only for not null vendorId **********/\n\n/**** Check the uniques months for pick up ***********/\n select distinct month(tpep_pickup_datetime) from rk_hive_test_db.nyc_taxi_data_part_clus_orc_rk \nwhere vendorid is not null and (year(tpep_pickup_datetime) = 2017 and year(tpep_dropoff_datetime) = 2017);\n/********** We can see it includes months : Octover, November and Descember where we don't to analyse data for October month\n--10\n--11\n--12\n--Vendor 1 has data only for Nov and dec for year 2017 but vendor 2 also has data for month oct, nov and dec for year 2017\n*********************************************************/\n\n  select distinct month(tpep_dropoff_datetime) from rk_hive_test_db.nyc_taxi_data_part_clus_orc_rk \nwhere vendorid is not null and (year(tpep_pickup_datetime) = 2017 and year(tpep_dropoff_datetime) = 2017);\n\n/********** We can see it includes months : Octover, November and Descember where we don't to analyse data for October month\n--10\n--11\n--12\n*********************************************************/\n\n/*******From here onwards, our analysis of data quality check and understanding will be limited to year 2017, months nov and dec and for not null vendorId **********/\n\n/********Get the row count for year 2017 and months nov and dec and for not null vendorid ***********/ \nselect count(*) from rk_hive_test_db.nyc_taxi_data_part_clus_orc_rk \nwhere vendorid is not null and (year(tpep_pickup_datetime) = 2017 and year(tpep_dropoff_datetime) = 2017)\nand month(tpep_pickup_datetime) in (11,12) and  month(tpep_dropoff_datetime) in (11,12) ;\n/***Total row count  : 18791040 ********************/\n\n/*************How many records has each TPEP provider provided? This is for year 2017 and months nov and dec and for not null vendorid  **************/\nselect VendorID,count(*) from rk_hive_test_db.nyc_taxi_data_part_clus_orc_rk where vendorid is not null and (year(tpep_pickup_datetime) = 2017 and year(tpep_dropoff_datetime) = 2017) and month(tpep_pickup_datetime) in (11,12) and  month(tpep_dropoff_datetime) in (11,12) group by VendorID;\n/********Result ********\n1\t8446659\n2\t10344381\n****************************/\n\n/********** Get the count of tripts grouped by vendoid and drop month *************************/\n select vendorid, month(tpep_dropoff_datetime), count (*) from rk_hive_test_db.nyc_taxi_data_part_clus_orc_rk \nwhere vendorid is not null and (year(tpep_pickup_datetime) = 2017 and year(tpep_dropoff_datetime) = 2017) \nand month(tpep_pickup_datetime) in (11,12) and  month(tpep_dropoff_datetime) in (11,12) group by vendorid,month(tpep_dropoff_datetime);\n\n/********Result ********\n1\t1\t11\t4187308\n2\t1\t12\t4259351\n3\t2\t11\t5093265\n4\t2\t12\t5251116\n****************************/\n\n/********** Get the count of tripts grouped by vendoid and pickup month *************************/\n select vendorid, month(tpep_pickup_datetime), count (*) from rk_hive_test_db.nyc_taxi_data_part_clus_orc_rk \nwhere vendorid is not null and (year(tpep_pickup_datetime) = 2017 and year(tpep_dropoff_datetime) = 2017) \nand month(tpep_pickup_datetime) in (11,12) and  month(tpep_dropoff_datetime) in (11,12) group by vendorid,month(tpep_pickup_datetime);\n/********Result ********\n1\t1\t11\t4188894\n2\t1\t12\t4257765\n3\t2\t11\t5095821\n4\t2\t12\t5248560\n****************************/\n\n/*****************Check for missing values for each column ************************/\nselect * from rk_hive_test_db.nyc_taxi_data_part_clus_orc_rk where vendorid is not null and \n(tpep_pickup_datetime is null or tpep_dropoff_datetime is null or passenger_count is null or trip_distance is null or\n ratecodeid is null or store_and_fwd_flag is null or pulocationid is null or dolocationid is null or payment_type is null or\n fare_amount is null or extra is null or mta_tax is null or tip_amount is null or tolls_amount is null or improvement_surcharge is null or total_amount is null) ;\n/***** 0 results  . no missing data ****************/\n\n \n /*********Check the count of trips grouped by  passenger_count ***********/\n select passenger_count,count(*) from rk_hive_test_db.nyc_taxi_data_part_clus_orc_rk \nwhere vendorid is not null and (year(tpep_pickup_datetime) = 2017 and year(tpep_dropoff_datetime) = 2017)\nand month(tpep_pickup_datetime) in (11,12) and  month(tpep_dropoff_datetime) in (11,12)\n group by  passenger_count;\n\n /**************\n1   0\t108965\n2\t1\t13250091\n3\t2\t2815818\n4\t3\t810689\n5\t4\t398801\n6\t5\t875733\n7\t6\t530959\n8\t7\t75\n9\t8\t60\n10\t9\t56\n11\t192\t1\n************************/\n/********Here we can see one invalid passenger count 192 also for one trip **************/\n\n/****** Check the trip counts and average fares grouped by vendorid,passenger_count ***********************/\n select vendorid,passenger_count,count(*),sum(fare_amount) from rk_hive_test_db.nyc_taxi_data_part_clus_orc_rk \nwhere vendorid is not null and (year(tpep_pickup_datetime) = 2017 and year(tpep_dropoff_datetime) = 2017)\nand month(tpep_pickup_datetime) in (11,12) and  month(tpep_dropoff_datetime) in (11,12)\n group by  vendorid,passenger_count;\n\n/******* Here we are showing count for only passenger_count 0 and 192 to check if their is any amount for fare charged ***********/\n2\t192\t1\t6.5\n1\t0\t\t108745\t1373328.3600013666\n2\t0\t\t220\t11912.84000856243\n**************************************************************/\n\n/************Check trip_distance related results grouped by vendorid ***************************/\nselect vendorid,min(trip_distance),max(trip_distance),avg(trip_distance), variance(trip_distance) from rk_hive_test_db.nyc_taxi_data_part_clus_orc_rk \nwhere vendorid is not null and (year(tpep_pickup_datetime) = 2017 and year(tpep_dropoff_datetime) = 2017) \nand month(tpep_pickup_datetime) in (11,12) and  month(tpep_dropoff_datetime) in (11,12) group by vendorid;\n/*******************************\n1\t0\t702.5\t2.773332343498796\t12.848873972886192\n2\t0\t687.219970703125\t2.9456372376474365\t14.32363363111327\n***************************************/\n\n/************Check trip counts grouped by vendorid when trip_distance is 0 ***************************/\nselect vendorid, count(*) from rk_hive_test_db.nyc_taxi_data_part_clus_orc_rk \nwhere vendorid is not null and (year(tpep_pickup_datetime) = 2017 and year(tpep_dropoff_datetime) = 2017)\nand month(tpep_pickup_datetime) in (11,12) and  month(tpep_dropoff_datetime) in (11,12)\nand trip_distance = 0 group by vendorid;\n/*******************************\n1\t68747\n2\t51252\n***************************************/\n\n/************Check trip counts grouped by vendorid passenger_count and when trip_distance is 0 ***************************/\nselect vendorid, count(*),avg(total_amount) from rk_hive_test_db.nyc_taxi_data_part_clus_orc_rk \nwhere vendorid is not null and (year(tpep_pickup_datetime) = 2017 and year(tpep_dropoff_datetime) = 2017)\nand month(tpep_pickup_datetime) in (11,12) and  month(tpep_dropoff_datetime) in (11,12)\nand trip_distance = 0 and passenger_count =0 group by vendorid;\n\n/*******************************\n1\t1521\t22.929559541367762\n2\t154\t\t50.9985068401733\n***************************************/\n\n/************Check trip counts grouped by vendorid ratecodeid  ***************************/\n select vendorid,ratecodeid,count(*),avg(fare_amount),avg(extra),avg(mta_tax),avg(tip_amount),avg(tolls_amount),avg(improvement_surcharge)\n ,avg(total_amount) from rk_hive_test_db.nyc_taxi_data_part_clus_orc_rk \nwhere vendorid is not null and (year(tpep_pickup_datetime) = 2017 and year(tpep_dropoff_datetime) = 2017)\nand month(tpep_pickup_datetime) in (11,12) and  month(tpep_dropoff_datetime) in (11,12)\n group by  vendorid,ratecodeid;\n \n/*****************************************************************************************************\n1   1\t[99]\t172\t53.844767576040226\t0.04941860465116279\t1.9648255726625754\t1.398313961749853\t0.6945348894873331\t\n2\t1\t[1]\t8231740\t11.807127846754613\t0.3117672752054496\t0.49991282159024253\t1.669586656696165\t0.18808172374333731\t\n3\t1\t[2]\t167900\t52.008505182305996\t0.7893644431197019\t0.499815366289458\t7.042671404374567\t4.365589268085818\t\n4\t1\t[3]\t18209\t64.05921137879568\t0.22035806553126416\t0\t9.494640560981093\t13.443019388069352\t\n5\t1\t[4]\t4121\t62.34545013239823\t0.3593787915554477\t0.49866537248240717\t7.269386072017775\t1.4924145159111588\t\n6\t1\t[5]\t24385\t54.021628051751186\t0.0002050440844781628\t0.001455812999794956\t6.044001213114526\t3.2277937466515847\t\n7\t2\t[99]\t6\t6.03333334128062\t0.5\t0\t0\t0.25\t\n8\t1\t[6]\t132\t38.208712137106694\t0\t0.49242424242424243\t1.2603030362815568\t0.17454546148126776\t\n9\t2\t[1]\t10042574\t11.924984285901713\t0.3104288103820592\t0.49910296901969553\t1.706213792236551\t0.20755594837560284\t\n10\t2\t[2]\t236731\t51.74068858746767\t0.811905496119627\t0.4975077197325234\t7.577127450812835\t4.3709367179666305\t\n11\t2\t[3]\t21965\t67.78005918506715\t0.1794992032855403\t0\t10.954187109905462\t13.61617710554\t\n12\t2\t[4]\t5621\t73.9428037715709\t0.3577655221490838\t0.49973314356876003\t9.03184841825678\t3.07527670001797\t\n13\t2\t[5]\t37675\t63.03761804874292\t4.777704237625942e-05\t0.28062375580623755\t7.403481613748918\t2.8902513818671234\t\n14\t2\t[6]\t17\t4.176470588235294\t0.1882353004287271\t0.5\t0.8823529411764706\t0\n***************************************************************************************************************/\n/**********************************************************\nVendor 2 has higher fares for same ratecodeid compared to vendor 1\nVendor 1 has more records 172 with invalid ratecodeid 99 compared to vendor 2 which has 6\n****************************************************************************/\n \n /************Check trip counts grouped by vendorid , payment_type  ***************************/\n select vendorid,payment_type,count(*),avg(fare_amount),avg(extra),avg(mta_tax),avg(tip_amount),avg(tolls_amount),avg(improvement_surcharge)\n ,avg(total_amount) from rk_hive_test_db.nyc_taxi_data_part_clus_orc_rk \nwhere vendorid is not null and (year(tpep_pickup_datetime) = 2017 and year(tpep_dropoff_datetime) = 2017)\nand month(tpep_pickup_datetime) in (11,12) and  month(tpep_dropoff_datetime) in (11,12)\n group by  vendorid,payment_type;\n \n/******************************************************************************************** \nA numeric code signifying how the passenger paid for the trip.  1= Credit card 2= Cash 3= No charge 4= Dispute 5= Unknown 6= Voided trip \n\n1\t1\t[1]\t5656789\t13.21565668969973\t0.32704141519200386\t0.4974791140340064\t2.7005109866651513\t0.34657305356464885\t0.299990996205118\t17.387252226866092\n2\t1\t[2]\t2671182\t11.802571685547457\t0.30467568290082475\t0.49814040376126684\t9.901983305834854e-06\t0.2194838686536838\t0.29992139503584037\t13.124802971933708\n3\t1\t[3]\t93993\t21.60384285214098\t0.34559594873238386\t0.47708680433641704\t0.003858691625595194\t0.5322526242189952\t0.2998021248363684\t23.262439056168706\n4\t1\t[4]\t24695\t14.773363028834101\t0.327854221527044\t0.4844681108980243\t0.003753796321801701\t0.5753674931282649\t0.29998786371230696\t16.46479446621143\n5\t2\t[1]\t6980979\t13.700720461977241\t0.3283775384508509\t0.4977529655940807\t2.7932857965253937\t0.3970576240691896\t0.2999043949555323\t18.02451511788273\n6\t2\t[2]\t3354257\t12.141315698248487\t0.30609133408649275\t0.4988223919634065\t0\t0.23040371287578945\t0.2998498296239667\t13.476568703701902\n7\t2\t[3]\t6519\t-9.161796288393937\t-0.37436723423838014\t-0.48619420156465715\t-0.1051649024867494\t-0.029641050048210188\t-0.2998619539310896\t-10.460316054530992\n8\t2\t[4]\t2834\t-8.530769230028906\t-0.3514467184191955\t-0.4827099505998589\t-0.12236415034839614\t-0.03585038895159434\t-0.2997882970219022\t-9.82705\n\nVendor 1 has more disputed (24695) and no charge records (93993)  compare to vendor 2 disputed (2834) and no charge records (6519) \nWe don't have any records for payment type 5 and 6\n********************************************************************************************************************/\n\n /************Check trip counts grouped by vendorid  to analyze the fare amount charged by each vendor  ***************************/\n select vendorid,count(*),avg(fare_amount),avg(extra),avg(mta_tax),avg(tip_amount),avg(tolls_amount),avg(improvement_surcharge)\n ,avg(total_amount), (avg(total_amount) - avg(fare_amount)) as fare_extra_difference from rk_hive_test_db.nyc_taxi_data_part_clus_orc_rk \nwhere vendorid is not null and (year(tpep_pickup_datetime) = 2017 and year(tpep_dropoff_datetime) = 2017)\nand month(tpep_pickup_datetime) in (11,12) and  month(tpep_dropoff_datetime) in (11,12)\n group by  vendorid;\n \n/********************************************************************************************************\n1\t8446659\t12.86667742019797\t0.32017729613741536\t0.49742327942867837\t1.8086089048638374\t0.3091173347343629\t0.2999668745572539\t16.101971101578386 3.2352936813804156\n2\t10344589\t13.174581711268697\t0.32052208164056\t0.49721105401094234\t1.8849310626590048\t0.34263220821522833\t0.29934444694185897\t16.524252027113768 3.3496703158450707\n\nVendor 2 avergae fare is little bit higher than vendor 1 and also people pay bit extra for vendor 2 than vendor 1\n********************************************************************************************************************/\n\n/*****************Summary of Identification of the data quality issues. **********************************\nCommonn data quality issues :\n1. Their are few null rows.\n2. Data includes years other than 2017 \n3. Data includes month other than Nov and Dec in year 2017\n4. Invalid passenger count 192 found for one trip \n5. Few trips are such that trip starts on one date and completes on next date causing change of dates for single trip\n6. Trip with 0 trip distance or 0 passenger count but fares showing some amount.\n \n***************Vendor specific Issues ***********************************\n\n1.\tVendor 1 has more disputed (24695) and no charge records (93993)  compare to vendor 2 disputed (2834) and no charge records (6519) \n2.\tVendor 1 has more records 172 with invalid ratecodeid 99 compared to vendor 2 which has 6\n3.\tVendor 1 has  67226 records with trip_distance = 0 and passenger_count <> 0 which is much higher compared to Vendor 2 which has 51101 records with trip_distance = 0 and passenger_count <> 0 \n4.\tVendor 1 has  1521 records with trip_distance = 0 and passenger_count =0 with some amount charged which is much higher compared to \n5.\tVendor 2 which has  154 records with trip_distance = 0 and passenger_count =0 with some amount charged\n6.\tVendor 1 has  108745 records with passenger_count =0 compared to vendor 2 220 records with passenger_count =0 \n\n****************************************************************************************/\n\n/***********************Conclude which vendor is doing a bad job in providing the records? *************************************/\nBased upon above analysis, vendor 1 has more bad quality data compared to vendor 2 since vendor 1 records has more data quality issues.\nVendor 2 is charging little bit higher fare than vendor 1 but data quality issues are less and vendor 2 seems to be more reliable.\n/*************************************************************************************************************************************/\n\n/****************************Analysis-I *******************************************************/\n\n/****************************Compare the overall average fare for November and December.********************/\n\n select month(tpep_pickup_datetime),month(tpep_dropoff_datetime),count(*),avg(fare_amount) as avg_fare,avg(extra) as avg_extra,avg(mta_tax) as avg_mta_tax,avg(tip_amount)as avg_tip_amt,avg(tolls_amount) as avg_toll_amt,\n avg(improvement_surcharge) as avg_impov_surchg,avg(total_amount) as avg_total_amt from rk_hive_test_db.nyc_taxi_data_part_clus_orc_rk \nwhere vendorid is not null and (year(tpep_pickup_datetime) = 2017 and year(tpep_dropoff_datetime) = 2017)\nand month(tpep_pickup_datetime) in (11,12) and  month(tpep_dropoff_datetime) in (11,12)\n group by  month(tpep_pickup_datetime),month(tpep_dropoff_datetime);\n \n/***************************Result***************************************************************************************\n_c1\t_c2\tavg_fare\tavg_extra\tavg_mta_tax\tavg_tip_amt\tavg_toll_amt\tavg_impov_surchg\tavg_total_amt\n_c1\t_c2\tavg_fare\tavg_extra\tavg_mta_tax\tavg_tip_amt\tavg_toll_amt\tavg_impov_surchg\tavg_total_amt\n11\t11\t9280573\t13.13774634496685\t0.31851288277194545\t0.4973421845824935\t1.887745591916017\t0.34049085958847297\t0.2996330571934986\t16.48389305131759\n11\t12\t4142\t20.1494954121072\t0.4734427812650893\t0.49770642201834864\t2.9114968661508485\t0.5450893490859012\t0.29971029679594496\t24.87882412573613\n12\t12\t9506325\t12.93393897867545\t0.32210797337618075\t0.49727132935161117\t1.813925691480482\t0.314861186768894\t0.29961556260463323\t16.184828242180174\n\nHere we will assume that average fare where pick up and drop dates are not same will  be applicable for both Nov and Dec months , so will not include\nin analysing average fare.\nWe can see that average fare in December month 9506325 is slighly higher than Novemeber month\n************************************************************************************************************************/\n\n/********Explore the \u2018number of passengers per trip\u2019 - how many trips are made by each level of \u2018Passenger_count\u2019? ***********\n*********Do most people travel solo or with other people? ******************************************************/\n\n select passenger_count,count(*) as count from rk_hive_test_db.nyc_taxi_data_part_clus_orc_rk \nwhere vendorid is not null and (year(tpep_pickup_datetime) = 2017 and year(tpep_dropoff_datetime) = 2017)\nand month(tpep_pickup_datetime) in (11,12) and  month(tpep_dropoff_datetime) in (11,12)\n group by  passenger_count;\n \n/***************************Result*************************************************************************************** \npassenger_count\t_c1\npassenger_count\t_c1\n0\t108965\n1\t13249946\n2\t2815794\n3\t810682\n4\t398798\n5\t875708\n6\t530955\n7\t75\n8\t60\n9\t56\n192\t1\n\nHere we can see the number of trips made by each level of 'Passenger_count' as above.\nWe can conclude that ost people travel solo (13249946) .\n************************************************************************************************************************/\n\n/********Which is the most preferred mode of payment?*******************************************************/\n\n select payment_type,count(*) as count,avg(fare_amount) as avg_fare,avg(extra) as avg_extra,avg(mta_tax) as avg_mta_tax,avg(tip_amount)as avg_tip_amt,avg(tolls_amount) as avg_toll_amt,\n avg(improvement_surcharge) as avg_impov_surchg,avg(total_amount) from rk_hive_test_db.nyc_taxi_data_part_clus_orc_rk \nwhere vendorid is not null and (year(tpep_pickup_datetime) = 2017 and year(tpep_dropoff_datetime) = 2017)\nand month(tpep_pickup_datetime) in (11,12) and  month(tpep_dropoff_datetime) in (11,12)\n group by  payment_type;\n \n /***************************Result***************************************************************************************\npayment_type is a numeric code signifying how the passenger paid for the trip.  1= Credit card 2= Cash 3= No charge 4= Dispute 5= Unknown 6= Voided trip \n \npayment_type\tcount\tavg_fare\tavg_extra\tavg_mta_tax\tavg_tip_amt\tavg_toll_amt\tavg_impov_surchg\t_c8\n[1]\t12637627\t13.483599509623382\t0.32777838592638026\t0.4976303605097154\t2.7517616915175047\t0.3744635011396812\t0.2999431578905398\t17.739273350946984\n[2]\t6025372\t11.991170538549971\t0.30546192002773404\t0.4985200382648288\t4.389770386101731e-06\t0.22556430805889865\t0.2998815544996766\t13.32065049303949\n[3]\t100512\t19.608447261991074\t0.29890062887220387\t0.41461039477866174\t-0.0032123527275006985\t0.49580936508030615\t0.2609091555442933\t21.075251053078016\n[4]\t27529\t12.374296196707334\t0.2579229176726489\t0.38490101342681204\t-0.009229539827834707\t0.5124450666756396\t0.23824331652495\t13.758153914652882\n\nHere payment_type 1  (Credit card) is the most preferred mode of payment;\n************************************************************************************************************************/\n\n/********What is the average tip paid? Compare the average tip with the 25th, 50th and 75th percentiles and comment whether the \u2018average tip\u2019 *************\nis a representative statistic (of the central tendency) of \u2018tip amount paid\u2019.\n**********************************************************************************************************************************/\n\n select avg(tip_amount)as avg_tip_amt from rk_hive_test_db.nyc_taxi_data_part_clus_orc_rk \nwhere vendorid is not null and (year(tpep_pickup_datetime) = 2017 and year(tpep_dropoff_datetime) = 2017)\nand month(tpep_pickup_datetime) in (11,12) and  month(tpep_dropoff_datetime) in (11,12);\n/***************************Result***************************************************************************************\navg_tip_amt\n1.8506260079424872\nAverage tip paid is 1.8506260079424872\n************************************************************************************************************************/\n\n/********Checking distinct tip_amount to decide on B paramter in percentile_approx function **************************/\nselect count(distinct tip_amount)as count from rk_hive_test_db.nyc_taxi_data_part_clus_orc_rk \nwhere vendorid is not null and (year(tpep_pickup_datetime) = 2017 and year(tpep_dropoff_datetime) = 2017)\nand month(tpep_pickup_datetime) in (11,12) and  month(tpep_dropoff_datetime) in (11,12);\n\n/**************************Result  4141 (B value should be more than this count)*********************************/\n\n/************* Get average tip along with the 25th, 50th and 75th percentiles tip amount ************************/\nselect avg(tip_amount)as avg_tip_amt,percentile_approx(tip_amount, 0.25,4200) as tip_25_percentile, percentile_approx(tip_amount, 0.5,4200) as tip_50_percentile,\npercentile_approx(tip_amount, 0.75,4200) as tip_75_percentile from rk_hive_test_db.nyc_taxi_data_part_clus_orc_rk \nwhere vendorid is not null and (year(tpep_pickup_datetime) = 2017 and year(tpep_dropoff_datetime) = 2017)\nand month(tpep_pickup_datetime) in (11,12) and  month(tpep_dropoff_datetime) in (11,12);\n\n/***************************Result***************************************************************************************\navg_tip_amt\t\t\ttip_25_percentile\t\ttip_50_percentile\ttip_75_percentile\n1.8506260079424872\t-0.005955277471055294\t1.351981399324019\t2.448505088955382\n\nHere 'average tip' is not a representative statistic (of the central tendency) of \u2018tip amount paid\u2019 as the tip amount \nmedian value is 1.351981399324019 which  is lower than the average tip amount 1.8506260079424872\n************************************************************************************************************************/\n\n/********Explore the \u2018Extra\u2019 (charge) variable - what fraction of total trips have an extra charge is levied? ***************/\n\n select avg(tip_amount)as avg_tip_amt , avg(extra) as avg_extra,sum(tip_amount)as total_tip_amt , sum(extra) as total_extra, \n( avg(extra)/avg(tip_amount))*100 as fraction_avg_extra_of_tip,( sum(extra)/sum(tip_amount))*100 as fraction_total_extra_of_tip from rk_hive_test_db.nyc_taxi_data_part_clus_orc_rk \nwhere vendorid is not null and (year(tpep_pickup_datetime) = 2017 and year(tpep_dropoff_datetime) = 2017)\nand month(tpep_pickup_datetime) in (11,12) and  month(tpep_dropoff_datetime) in (11,12);\n\n/***************************Result***************************************************************************************\navg_tip_amt\t\t\tavg_extra\t\t\ttotal_tip_amt\t\ttotal_extra\t\t fraction_avg_extra_of_tip\tfraction_total_extra_of_tip\n1.8506260079424872\t0.3203657775200736\t34775187.340287596\t6020006.140010804\t17.31121124123042\t\t17.31121124123042\n\nHere average or total tip amount is much higher than average or total extra amount.\nAlso Extra amount is around 17.3% of total tip amount generally.\n************************************************************************************************************************/\n\n/***************************Analysis-II ************************************************************/\n\n/**********What is the correlation between the number of passengers and tip paid? Do multiple travellers pay more compared to solo travellers? **********/\n\n/************* Get the average tip amount for each level of passenger_count **************************/\n select passenger_count,avg(tip_amount)as avg_tip_amt from rk_hive_test_db.nyc_taxi_data_part_clus_orc_rk \nwhere vendorid is not null and (year(tpep_pickup_datetime) = 2017 and year(tpep_dropoff_datetime) = 2017)\nand month(tpep_pickup_datetime) in (11,12) and  month(tpep_dropoff_datetime) in (11,12)\n group by  passenger_count;\n \n/***************************Result***************************************************************************************\n  passenger_count\tavg_tip_amt\n\n1\t0\t1.7632504947897043\n2\t1\t1.8579490524419435\n3\t2\t1.8641309281270322\n4\t3\t1.7727101509516048\n5\t4\t1.631771223140227\n6\t5\t1.8734892117975077\n7\t6\t1.8583563585532976\n8\t7\t3.630133365790049\n9\t8\t8.546833296616873\n10\t9\t6.2632143050432205\n11\t192\t1.2400000095367432\n\nWe don't see any clear trend where average tip amount is increasing with passenger count.\nBut when passenger count is more than 6 then we see that average tip amount is much higher.\n\n************************************************************************************************************************/\n\n/*************** Get the corelation between passenger_count and  tip_amount *********************/\nselect corr(passenger_count,tip_amount)\nfrom rk_hive_test_db.nyc_taxi_data_part_clus_orc_rk \nwhere vendorid is not null and (year(tpep_pickup_datetime) = 2017 and year(tpep_dropoff_datetime) = 2017)\nand month(tpep_pickup_datetime) in (11,12) and  month(tpep_dropoff_datetime) in (11,12);\n\n/***************************Result***************************************************************************************\n-0.0037971068726033474\n\nCorrelation tells that both are not much linearly related . It has a sligh negative corelation .\n************************************************************************************************************************/\n\n\n/***************Create five buckets of \u2018tip paid\u2019: [0-5), [5-10), [10-15) , [15-20) and >=20.  ************************/\n/***************Calculate the percentage share of each bucket (i.e. the fraction of trips falling in each bucket).*****/\n\n/*********** Get total tip amount ***************************************/\nselect sum(tip_amount) as total_tip_amount_in_bucket\n   from rk_hive_test_db.nyc_taxi_data_part_clus_orc_rk \n\twhere vendorid is not null and (year(tpep_pickup_datetime) = 2017 and year(tpep_dropoff_datetime) = 2017)\n\tand month(tpep_pickup_datetime) in (11,12) and  month(tpep_dropoff_datetime) in (11,12);\n\n/***************************Result***************************************************************************************\n34775187.340287596\n************************************************************************************************************************/\n\t\n/*********** Get  tip amount for bucket [0-5) and faction of total tip amount***************************************/\nselect sum(tip_amount)  as tip_amount_1_5_bucket,(sum(tip_amount)/(34775187))*100 as tip_1_5_bucket_fraction\n   from rk_hive_test_db.nyc_taxi_data_part_clus_orc_rk \n\twhere vendorid is not null and (year(tpep_pickup_datetime) = 2017 and year(tpep_dropoff_datetime) = 2017)\n\tand month(tpep_pickup_datetime) in (11,12) and  month(tpep_dropoff_datetime) in (11,12)\n   and tip_amount > 0 and tip_amount <= 5  ;\n\n /***************************Result***************************************************************************************\ntip_amount_1_5_bucket\ttip_1_5_bucket_fraction\n22998149.883710835\t\t66.13379213089733\n************************************************************************************************************************/\n\n/*********** Get  tip amount for bucket [5-10) and faction of total tip amount***************************************/\nselect sum(tip_amount)  as tip_amount_5_10_bucket,(sum(tip_amount)/(34775187))*100 as tip_5_10_bucket_fraction\n   from rk_hive_test_db.nyc_taxi_data_part_clus_orc_rk \n\twhere vendorid is not null and (year(tpep_pickup_datetime) = 2017 and year(tpep_dropoff_datetime) = 2017)\n\tand month(tpep_pickup_datetime) in (11,12) and  month(tpep_dropoff_datetime) in (11,12)\n   and tip_amount > 5 and tip_amount <= 10  ;\n   \n /***************************Result***************************************************************************************   \ntip_amount_5_10_bucket\ttip_5_10_bucket_fraction   \n6814925.98917532\t19.59709372425609\n************************************************************************************************************************/\n\n/*********** Get  tip amount for bucket [10-15) and faction of total tip amount***************************************/\nselect sum(tip_amount)  as tip_amount_10_15_bucket,(sum(tip_amount)/(34775187))*100 as tip_10_15_bucket_fraction\n   from rk_hive_test_db.nyc_taxi_data_part_clus_orc_rk \n\twhere vendorid is not null and (year(tpep_pickup_datetime) = 2017 and year(tpep_dropoff_datetime) = 2017)\n\tand month(tpep_pickup_datetime) in (11,12) and  month(tpep_dropoff_datetime) in (11,12)\n   and tip_amount > 10 and tip_amount <= 15  ;\n   \n/***************************Result***************************************************************************************   \n tip_amount_10_15_bucket\ttip_10_15_bucket_fraction   \n3735927.5992069244\t10.743084139869396\n************************************************************************************************************************/\n\n/*********** Get  tip amount for bucket [15-20) and faction of total tip amount***************************************/\nselect sum(tip_amount)  as tip_amount_15_20_bucket,(sum(tip_amount)/(34775187))*100 as tip_15_20_bucket_fraction\n   from rk_hive_test_db.nyc_taxi_data_part_clus_orc_rk \n\twhere vendorid is not null and (year(tpep_pickup_datetime) = 2017 and year(tpep_dropoff_datetime) = 2017)\n\tand month(tpep_pickup_datetime) in (11,12) and  month(tpep_dropoff_datetime) in (11,12)\n   and tip_amount > 15 and tip_amount <= 20  ;\n   \n/***************************Result***************************************************************************************    \n tip_amount_15_20_bucket\ttip_15_20_bucket_fraction   \n 730931.1184225082\t2.1018754505116197\n ************************************************************************************************************************/\n \n/*********** Get  tip amount for bucket 20+ and faction of total tip amount***************************************/\nselect sum(tip_amount)  as tip_amount_20_plus__bucket,(sum(tip_amount)/(34775187))*100 as tip_20__plus_bucket_fraction\n   from rk_hive_test_db.nyc_taxi_data_part_clus_orc_rk \n\twhere vendorid is not null and (year(tpep_pickup_datetime) = 2017 and year(tpep_dropoff_datetime) = 2017)\n\tand month(tpep_pickup_datetime) in (11,12) and  month(tpep_dropoff_datetime) in (11,12)\n   and tip_amount > 20   ;   \n   \n/***************************Result***************************************************************************************    \n    tip_amount_10_15_bucket\ttip_10_15_bucket_fraction   \n   496285.099773407\t\t\t1.4271241726849866\n ************************************************************************************************************************/\n   \n   \n/***********Which month has a greater average \u2018speed\u2019 - November or December? Note that the variable \u2018speed\u2019 will have to be derived from other metrics.**********/\n \n /*** Get the average speed grouped by both pick up and drop month ***************************/\n select month(tpep_pickup_datetime),month(tpep_dropoff_datetime), avg(trip_distance/((unix_timestamp(tpep_dropoff_datetime) - unix_timestamp(tpep_pickup_datetime))/3600)) as avg_speed from rk_hive_test_db.nyc_taxi_data_part_clus_orc_rk \nwhere vendorid is not null and (year(tpep_pickup_datetime) = 2017 and year(tpep_dropoff_datetime) = 2017)\nand month(tpep_pickup_datetime) in (11,12) and  month(tpep_dropoff_datetime) in (11,12)\n group by  month(tpep_pickup_datetime),month(tpep_dropoff_datetime);\n \n/***************************Result***************************************************************************************  \n11\t11\t12.758605943227732\n11\t12\t12.449429489227986\n12\t12\t12.705483616452682\n\nHere we will assume that trips where date changes will be applicable for both Nov and Dec months and hence won't consider it.\nNovember month has greater average spped 12.758605943227732 compared to December month 12.705483616452682 .\n ************************************************************************************************************************/\n \n/************Analyse the average speed of the most happening days of the year i.e. 31st December (New year\u2019s eve) and 25th December (Christmas Eve) \n/******and compare it with the overall average.  ************************/\n\n/*** Get the overall average speed ***************************/\n select avg(trip_distance/((unix_timestamp(tpep_dropoff_datetime) - unix_timestamp(tpep_pickup_datetime))/3600)) as overall_avg_speed from rk_hive_test_db.nyc_taxi_data_part_clus_orc_rk \nwhere vendorid is not null and (year(tpep_pickup_datetime) = 2017 and year(tpep_dropoff_datetime) = 2017)\nand month(tpep_pickup_datetime) in (11,12) and  month(tpep_dropoff_datetime) in (11,12);\n\n/***************************Result*************************************************************************************** \noverall_avg_speed\n12.731662670638789\n************************************************************************************************************************/\n\n/*** Get the  average speed for 25th December ***************************/\n select day(tpep_pickup_datetime), day(tpep_dropoff_datetime),avg(trip_distance/((unix_timestamp(tpep_dropoff_datetime) - unix_timestamp(tpep_pickup_datetime))/3600)) as overall_avg_speed from rk_hive_test_db.nyc_taxi_data_part_clus_orc_rk \nwhere vendorid is not null and (year(tpep_pickup_datetime) = 2017 and year(tpep_dropoff_datetime) = 2017)\nand month(tpep_pickup_datetime) = 12 and  month(tpep_dropoff_datetime) = 12 and day(tpep_pickup_datetime) = 25 and  day(tpep_dropoff_datetime) in (25,26)\ngroup by day(tpep_pickup_datetime), day(tpep_dropoff_datetime);\n\n/***************************Result*************************************************************************************** \n25\t25\t16.804706410414326\n25\t26\t13.000195784866202\n\nHere we can see that average speed is less when date changes . \nAverage spped on 25th Dec in year 2017 is higher compared to overall_avg_speed 12.731662670638789\n************************************************************************************************************************/\n\n/*** Get the  average speed for 31st December ***************************/\n select avg(trip_distance/((unix_timestamp(tpep_dropoff_datetime) - unix_timestamp(tpep_pickup_datetime))/3600)) as overall_avg_speed from rk_hive_test_db.nyc_taxi_data_part_clus_orc_rk \nwhere vendorid is not null and (year(tpep_pickup_datetime) = 2017 and year(tpep_dropoff_datetime) = 2017)\n\n/***************************Result*************************************************************************************** \n14.057195690169191\nAverage spped on 31st Dec in year 2017 is higher compared to overall_avg_speed 12.731662670638789\n************************************************************************************************************************/\n\n\n/**********************************End of Data Analysis *****************************************************************************/\n", 
    "uuid": "0fa9a284-1e86-0a01-573e-66256e7fc40e", 
    "extra": "", 
    "type": "notebook", 
    "description": "HIVE_ASSIGNMENT_RAJU", 
    "is_history": false, 
    "parent_directory": [
      "fe7db785-c4b3-4542-8e80-752f6e2fdf80", 
      1, 
      false
    ], 
    "is_managed": false, 
    "last_modified": "2018-08-26T10:41:07", 
    "version": 1, 
    "owner": [
      "kraju.bit_gmail"
    ], 
    "dependencies": [], 
    "data": "{\"parentSavedQueryUuid\": null, \"historyFilter\": \"\", \"description\": \"HIVE_ASSIGNMENT_RAJU\", \"sessions\": [{\"type\": \"hive\", \"properties\": [{\"multiple\": true, \"defaultValue\": [], \"value\": [], \"nice_name\": \"Files\", \"key\": \"files\", \"help_text\": \"Add one or more files, jars, or archives to the list of resources.\", \"type\": \"hdfs-files\"}, {\"multiple\": true, \"defaultValue\": [], \"value\": [], \"nice_name\": \"Functions\", \"key\": \"functions\", \"help_text\": \"Add one or more registered UDFs (requires function name and fully-qualified class name).\", \"type\": \"functions\"}, {\"multiple\": true, \"defaultValue\": [], \"value\": [], \"nice_name\": \"Settings\", \"key\": \"settings\", \"help_text\": \"Hive and Hadoop configuration properties.\", \"type\": \"settings\", \"options\": [\"hive.map.aggr\", \"hive.exec.compress.output\", \"hive.exec.parallel\", \"hive.execution.engine\", \"mapreduce.job.queuename\"]}], \"id\": 1246}], \"updateHistoryFailed\": false, \"loadingHistory\": true, \"schedulerViewModel\": null, \"retryModalCancel\": null, \"schedulerViewModelIsLoaded\": false, \"isBatchable\": true, \"isHistory\": false, \"id\": 23956, \"snippets\": [{\"compatibilitySourcePlatforms\": [{\"name\": \"Teradata\", \"value\": \"teradata\"}, {\"name\": \"Oracle\", \"value\": \"oracle\"}, {\"name\": \"Netezza\", \"value\": \"netezza\"}, {\"name\": \"Impala\", \"value\": \"impala\"}, {\"name\": \"Hive\", \"value\": \"hive\"}, {\"name\": \"DB2\", \"value\": \"db2\"}, {\"name\": \"Greenplum\", \"value\": \"greenplum\"}, {\"name\": \"MySQL\", \"value\": \"mysql\"}, {\"name\": \"PostgreSQL\", \"value\": \"postgresql\"}, {\"name\": \"Informix\", \"value\": \"informix\"}, {\"name\": \"SQL Server\", \"value\": \"sqlserver\"}, {\"name\": \"Sybase\", \"value\": \"sybase\"}, {\"name\": \"Access\", \"value\": \"access\"}, {\"name\": \"Firebird\", \"value\": \"firebird\"}, {\"name\": \"ANSISQL\", \"value\": \"ansisql\"}, {\"name\": \"Generic\", \"value\": \"generic\"}], \"chartSorting\": \"none\", \"wasBatchExecuted\": false, \"chartLimits\": [5, 10, 25, 50, 100], \"chartX\": null, \"previousChartOptions\": {}, \"queriesFilterVisible\": false, \"associatedDocumentLoading\": true, \"chartYMulti\": [], \"showChart\": false, \"isResultSettingsVisible\": false, \"chartScope\": \"world\", \"statement_raw\": \"/****************************Problem Statement and Purpose*********************************/\\n/*******The New York City Taxi & Limousine Commission (TLC) has provided a dataset of trips made by the taxis in the New York city.**********/\\n/*******The detailed trip-level data is more than just a vast list of taxi pickup and drop off coordinates.**********/\\n/*****The purpose of this dataset is to get a better understanding of the taxi system, so that the city can improve the efficiency of in-city commutes.***/\\n\\n/******************Data Understanding*********************************/\\n/**The records include fields capturing pick-up and drop-off dates/times, pick-up and drop-off locations (location coordinates of the starting and ending points), **/\\n/***trip distances, itemized fares, rate types, payment types, driver-reported passenger counts etc. **/\\n\\n/*****************The dataset has been placed in the HDFS storage of the lab. The path to the data files is as follows: **********/\\n/*******November data: '/common_folder/nyc_taxi_data/nov/' **********/\\n/*******December data: '/common_folder/nyc_taxi_data/dec/' **********/\\n\\n\\n/************************ Schema Creation for Data Set ******************************/\\n\\n\\n/* IMPORTANT: BEFORE CREATING ANY TABLE, MAKE SURE YOU RUN THIS COMMAND */\\nADD JAR /opt/cloudera/parcels/CDH/lib/hive/lib/hive-hcatalog-core-1.1.0-cdh5.11.2.jar;\\n\\n/******** Following type of Schemas can be created for data set analysis *****************/\\n/****** 1. Create plain External table using file parent directory to load all the data in subdirectories in the table ******/\\n/****** 2. Create External table with partition option pointing to local location for storing partioned data ******/\\n/****** 3. Create External table with partition and orc option pointing to local location for storing partioned data ******/\\n/****** 4. Create External table with partition and clustering option pointing to local location for storing partioned  ******/\\n/****** 5. Create External table with partition,clustering and orc option pointing to local location for storing partioned data ******/\\n\\n/*******Run following Set commands to allow creation of table from data in multiple sub directories *****************/\\nset hive.input.dir.recursive=true;\\nset hive.mapred.supports.subdirectories=true;\\nset hive.supports.subdirectories=true;\\nset mapreduce.input.fileinputformat.input.dir.recursive=true; \\n\\n/***** table will be dropped if exists **********/\\ndrop table rk_hive_test_db.nyc_taxi_data_rk;\\n\\n/****************************Schema Type 1 : No Partition Table *************************************************/\\n/****** Create plain External table using file parent directory to load all the data in subdirectories in the table ******/\\n\\ncreate external table if not exists rk_hive_test_db.nyc_taxi_data_rk(VendorID int,tpep_pickup_datetime timestamp,tpep_dropoff_datetime timestamp,passenger_count int, trip_distance float,RatecodeID array<int>,store_and_fwd_flag string,PULocationID int,DOLocationID int,payment_type array<int>,fare_amount float,extra float,mta_tax float,tip_amount float,tolls_amount float,improvement_surcharge float,total_amount float)\\n    COMMENT 'NYC Taxi Data'\\n    ROW FORMAT DELIMITED\\n    FIELDS TERMINATED BY ','\\n    STORED AS TEXTFILE\\n    LOCATION '/common_folder/nyc_taxi_data';\\n\\t\\n/*****Describe created table\\t*************/\\ndescribe rk_hive_test_db.nyc_taxi_data_rk;\\n/***************************************************\\n1\\tvendorid\\tint\\t\\n2\\ttpep_pickup_datetime\\ttimestamp\\t- 0 null\\n3\\ttpep_dropoff_datetime\\ttimestamp\\t- 0 null\\n4\\tpassenger_count\\tint\\t- 0 null\\n5\\ttrip_distance\\tfloat\\t- 0 null\\n6\\tratecodeid\\tarray<int>\\t\\n7\\tstore_and_fwd_flag\\tstring\\t\\n8\\tpulocationid\\tint\\t\\n9\\tdolocationid\\tint\\t\\n10\\tpayment_type\\tarray<int>\\t\\n11\\tfare_amount\\tfloat\\t\\n12\\textra\\tfloat\\t\\n13\\tmta_tax\\tfloat\\t\\n14\\ttip_amount\\tfloat\\t\\n15\\ttolls_amount\\tfloat\\t\\n16\\timprovement_surcharge\\tfloat\\t\\n17\\ttotal_amount\\tfloat\\t\\n/***************************************************\\n\\n/******Get the total counts ******************************/\\nselect count(*) from rk_hive_test_db.nyc_taxi_data_rk;\\n/***Total row count : 18793083 ********************/\\n\\n/****************************Schema Type 2 : Partition Table *************************************************/\\n/****** Create External table with partition option pointing to local location for storing partioned data ******/\\n\\n/**************** Deciding fields for partition *******************************/\\n/**** Based upon problem statement and analysis question, most of the time we will be using year and month as filter conditions in where clause, **/\\n/**********So we will use year and month as partitions to improve query performance based upon year and monthS****************************/\\n\\n/************Create the folder to store partition data and give full access *******************/\\t\\n\\n/*************************************************************\\tCreate it if path does not exist********\\nhadoop fs -mkdir /user/hive/warehouse/rknyctaxidata\\nhadoop fs -chmod 777  /user/hive/warehouse/rknyctaxidata\\nhadoop fs -ls /user/hive/warehouse/rknyctaxidata\\n*************************************************************************/\\t\\n\\n/*******Run following Set commands to allow creation of table using partitions *****************/\\nSET hive.exec.max.dynamic.partitions=1000;\\nSET hive.exec.max.dynamic.partitions.pernode=1000;\\nSET hive.exec.dynamic.partition = true;\\nSET hive.exec.dynamic.partition.mode = nonstrict;\\n\\n/***** table will be dropped if exists **********/\\ndrop table nyc_taxi_data_partition_rk;\\n\\n/* Then create external table */\\ncreate external table if not exists rk_hive_test_db.nyc_taxi_data_partition_rk(VendorID int,tpep_pickup_datetime timestamp,tpep_dropoff_datetime timestamp,passenger_count int, trip_distance float,RatecodeID array<int>,store_and_fwd_flag string,PULocationID int,DOLocationID int,payment_type array<int>,fare_amount float,extra float,mta_tax float,tip_amount float,tolls_amount float,improvement_surcharge float,total_amount float) partitioned by (yr int, mnth int)\\nlocation '/user/hive/warehouse/rknyctaxidata';\\n\\n/* Then insert the data in the table */\\ninsert overwrite table nyc_taxi_data_partition_rk partition(yr, mnth)\\nselect VendorID ,tpep_pickup_datetime ,tpep_dropoff_datetime ,passenger_count , trip_distance ,RatecodeID ,store_and_fwd_flag ,PULocationID ,DOLocationID ,payment_type ,fare_amount ,extra ,mta_tax ,tip_amount ,tolls_amount ,improvement_surcharge ,total_amount , year(tpep_pickup_datetime) as yr, month(tpep_pickup_datetime) as mnth\\nfrom nyc_taxi_data_rk;\\n\\n/******Get the total counts ******************************/\\nselect count(*) from nyc_taxi_data_partition_rk;\\n/***Total row count : 18793083 ********************/\\n\\n/****************************Schema Type 3 : Partition with ORC *************************************************/\\n/****** Create External table with partition and orc option pointing to local location for storing partioned data ******/\\n\\n/************Create the folder to store partition data and give full access *******************/\\n/*************************************************************\\tCreate it if path does not exist\\nhadoop fs -mkdir /user/hive/warehouse/rkorcnyctaxidata\\nhadoop fs -chmod 777  /user/hive/warehouse/rkorcnyctaxidata\\nhadoop fs -ls /user/hive/warehouse/rkorcnyctaxidata\\n**********************************************************/\\n\\n\\n/***** table will be dropped if exists **********/\\ndrop table nyc_taxi_data_partition_orc_rk;\\n\\n/* Then create external table */\\ncreate external table if not exists rk_hive_test_db.nyc_taxi_data_partition_orc_rk(VendorID int,tpep_pickup_datetime timestamp,tpep_dropoff_datetime timestamp,passenger_count int, trip_distance float,RatecodeID array<int>,store_and_fwd_flag string,PULocationID int,DOLocationID int,payment_type array<int>,fare_amount float,extra float,mta_tax float,tip_amount float,tolls_amount float,improvement_surcharge float,total_amount float) partitioned by (yr int, mnth int)\\nstored as orc location '/user/hive/warehouse/rkorcnyctaxidata'\\ntblproperties (\\\"orc.compress\\\"=\\\"SNAPPY\\\");\\n\\n/* Then insert the data in the table */\\ninsert overwrite table nyc_taxi_data_partition_orc_rk partition(yr , mnth) select * from nyc_taxi_data_partition_rk;\\n\\n/******Get the total counts ******************************/\\nselect count(*) from nyc_taxi_data_partition_orc_rk;\\n/***Total row count : 18793083 ********************/\\n\\n/****************************Schema Type 4 : Partition Table with Clustering *************************************************/\\n/****** Create External table with partition and clustering option pointing to local location for storing partioned  ******/\\n\\n/********** Determining number of clusters required *************/\\n/*** Todate Data size for both files : 781 MB + 799 MB = 1580 MB ***/\\n/*** Assuming One Block  Size = 128 MB = 12  ***/\\n/*** Total  Number of Clusters required = 1580/128 = 12 *******/\\n\\n/********** Deciding on  clusters column *************/\\n/******We need to run couple of queries using  pick up date and since their are many dates, we will use it as a cluster field for bucketing ************/\\n\\n/************Create the folder to store partition data and give full access *******************/\\n/*************************************************************\\tCreate it if path does not exist\\t\\nhadoop fs -mkdir /user/hive/warehouse/rkclusparnyctaxidata\\nhadoop fs -chmod 777  /user/hive/warehouse/rkclusparnyctaxidata\\nhadoop fs -ls /user/hive/warehouse/rkclusparnyctaxidata\\n******************************************************************************************/\\n\\n/***** table will be dropped if exists **********/\\ndrop table nyc_taxi_data_partition_clus_rk;\\n\\n/* Then create external table */\\n\\tcreate external table if not exists rk_hive_test_db.nyc_taxi_data_partition_clus_rk(VendorID int,tpep_pickup_datetime timestamp,tpep_dropoff_datetime timestamp,passenger_count int, trip_distance float,RatecodeID array<int>,store_and_fwd_flag string,PULocationID int,DOLocationID int,payment_type array<int>,fare_amount float,extra float,mta_tax float,tip_amount float,tolls_amount float,improvement_surcharge float,total_amount float) partitioned by (yr int, mnth int) clustered by (tpep_pickup_datetime) into 12 buckets\\n    location '/user/hive/warehouse/rkclusparnyctaxidata';\\n\\n/* Then insert the data in the table */\\ninsert overwrite table nyc_taxi_data_partition_clus_rk partition(yr , mnth) select * from nyc_taxi_data_partition_rk;\\n\\n/******Get the total counts ******************************/\\nselect count(*) from nyc_taxi_data_partition_clus_rk;\\n/***Total row count : 18793083 ********************/\\n\\n\\n/****************************Schema Type 5 : Partition Table with Clustering and ORC *************************************************/\\n/****** Create External table with partition,clustering and orc option pointing to local location for storing partioned data  ******/\\n\\n/************Create the folder to store partition data and give full access *******************/\\t\\n/*************************************************************\\tCreate it if path does not exist\\nhadoop fs -mkdir /user/hive/warehouse/rkclusorcnyctaxidata\\nhadoop fs -chmod 777  /user/hive/warehouse/rkclusorcnyctaxidata\\nhadoop fs -ls /user/hive/warehouse/rkclusorcnyctaxidata\\n******************************************************************************************/\\n\\n/***** table will be dropped if exists **********/\\ndrop table nyc_taxi_data_part_clus_orc_rk;\\n\\n/* Then create external table */\\n\\tcreate external table if not exists rk_hive_test_db.nyc_taxi_data_part_clus_orc_rk(VendorID int,tpep_pickup_datetime timestamp,tpep_dropoff_datetime timestamp,passenger_count int, trip_distance float,RatecodeID array<int>,store_and_fwd_flag string,PULocationID int,DOLocationID int,payment_type array<int>,fare_amount float,extra float,mta_tax float,tip_amount float,tolls_amount float,improvement_surcharge float,total_amount float) partitioned by (yr int, mnth int) clustered by (tpep_pickup_datetime) into 12 buckets\\n   stored as orc location '/user/hive/warehouse/rkclusorcnyctaxidata'\\n   tblproperties (\\\"orc.compress\\\"=\\\"SNAPPY\\\");\\n\\n/* Then insert the data in the table */\\ninsert overwrite table nyc_taxi_data_part_clus_orc_rk partition(yr , mnth) select * from nyc_taxi_data_partition_rk;\\n\\n/******Get the total counts ******************************/\\nselect count(*) from nyc_taxi_data_part_clus_orc_rk;\\n/***Total row count : 18793083 ********************/\\n\\n/*********** Schema  Creation is complete ******************************/\\n/******** Table nyc_taxi_data_part_clus_orc_rk shoud be more performing table as its a partitioned with clustering and ORC option ************/\\n\\n\\n/*************** Basic Data Quality Checks **************************************************/\\n\\n\\t\\n/******Get the total counts ******************************/\\nselect count(*) from rk_hive_test_db.nyc_taxi_data_part_clus_orc_rk;\\n/***Total row count : 18793083 ********************/\\n\\n/******Get the total counts when vendor id is not null******************************/\\nselect count(*) from rk_hive_test_db.nyc_taxi_data_part_clus_orc_rk where vendorid is not null;\\n/***Total row count when vendor id is not null : 18793079 ********************/\\n\\n/******Get the total counts when vendor id is null******************************/\\nselect count(*) from rk_hive_test_db.nyc_taxi_data_part_clus_orc_rk where vendorid is null;\\n/***Total row count when vendor id is null : 4 ********************/\\n \\n/******Get the total counts of distinct vendor id ******************************/\\nselect count(Distinct vendorid) from rk_hive_test_db.nyc_taxi_data_part_clus_orc_rk where vendorid is not null;\\n/***Total unique vendor id count is  : 2 ********************/\\n/**** 1= Creative Mobile Technologies, LLC; 2= VeriFone Inc *************/\\n\\n/*************How many records has each TPEP provider provided? Write a query that summarises the number of records of each provider. **************/\\n\\nselect VendorID,count(*) from rk_hive_test_db.nyc_taxi_data_part_clus_orc_rk where vendorid is not null group by VendorID;\\n/*****************\\n2\\t\\t10345930\\nnull\\t2\\n1\\t\\t8447149\\n******************/\\n\\n/********************Below are the List of queries ran for checking Data Quality issues and understanding the Data distribution *************/\\n\\n/*** Check the trip count grouped  by vendorid,year(tpep_dropoff_datetime) ***************/\\n select vendorid, year(tpep_dropoff_datetime), count (*) from rk_hive_test_db.nyc_taxi_data_part_clus_orc_rk \\nwhere vendorid is not null group by vendorid,year(tpep_dropoff_datetime);\\n\\n/*********************\\n1\\t1\\t2019\\t1\\n2\\t2\\t2041\\t1\\n3\\t2\\t2017\\t10344589\\n4\\t2\\t2018\\t1268\\n5\\t2\\t2001\\t1\\n6\\t2\\t2003\\t4\\n7\\t2\\t2008\\t15\\n8\\t2\\t2009\\t52\\n9\\t1\\t2016\\t1\\n10\\t1\\t2017\\t8446659\\n11\\t1\\t2018\\t488\\n***********************/\\n\\n/*********** year 2041 is invalid and bad data *******************/\\n/*********It includes  data from years other than 2017 also. We need to analyse data only for 2017**********/\\n\\n/***********Check the count of trips where either of date is not from year 2017 ************************/\\nselect vendorid,year(tpep_pickup_datetime),year(tpep_dropoff_datetime) from rk_hive_test_db.nyc_taxi_data_part_clus_orc_rk \\nwhere vendorid is not null and (year(tpep_pickup_datetime) <> 2017 or year(tpep_dropoff_datetime) <> 2017);\\n\\n/***** 1831 records are such that where either tpep_pickup_datetime or tpep_dropoff_datetime is not from year 2017 *********/\\n/***For our analysis purpose we will assume that only those records are eligible for analysis where both tpep_pickup_datetime and tpep_dropoff_datetime are from 2017 ***/\\n\\n/*******Check tpep_pickup_datetime date range ***************************/\\nselect max(tpep_pickup_datetime),min(tpep_pickup_datetime) from rk_hive_test_db.nyc_taxi_data_part_clus_orc_rk where vendorid is not null;\\n/***** 2041-11-15 02:57:16.0\\t2001-01-01 00:04:13.0 ***********/\\n\\n\\n\\n/*************From here onwards, our analysis of data quality check and understanding will be limited to year 2017 only for not null vendorId **********/\\n\\n/**** Check the uniques months for pick up ***********/\\n select distinct month(tpep_pickup_datetime) from rk_hive_test_db.nyc_taxi_data_part_clus_orc_rk \\nwhere vendorid is not null and (year(tpep_pickup_datetime) = 2017 and year(tpep_dropoff_datetime) = 2017);\\n/********** We can see it includes months : Octover, November and Descember where we don't to analyse data for October month\\n--10\\n--11\\n--12\\n--Vendor 1 has data only for Nov and dec for year 2017 but vendor 2 also has data for month oct, nov and dec for year 2017\\n*********************************************************/\\n\\n  select distinct month(tpep_dropoff_datetime) from rk_hive_test_db.nyc_taxi_data_part_clus_orc_rk \\nwhere vendorid is not null and (year(tpep_pickup_datetime) = 2017 and year(tpep_dropoff_datetime) = 2017);\\n\\n/********** We can see it includes months : Octover, November and Descember where we don't to analyse data for October month\\n--10\\n--11\\n--12\\n*********************************************************/\\n\\n/*******From here onwards, our analysis of data quality check and understanding will be limited to year 2017, months nov and dec and for not null vendorId **********/\\n\\n/********Get the row count for year 2017 and months nov and dec and for not null vendorid ***********/ \\nselect count(*) from rk_hive_test_db.nyc_taxi_data_part_clus_orc_rk \\nwhere vendorid is not null and (year(tpep_pickup_datetime) = 2017 and year(tpep_dropoff_datetime) = 2017)\\nand month(tpep_pickup_datetime) in (11,12) and  month(tpep_dropoff_datetime) in (11,12) ;\\n/***Total row count  : 18791040 ********************/\\n\\n/*************How many records has each TPEP provider provided? This is for year 2017 and months nov and dec and for not null vendorid  **************/\\nselect VendorID,count(*) from rk_hive_test_db.nyc_taxi_data_part_clus_orc_rk where vendorid is not null and (year(tpep_pickup_datetime) = 2017 and year(tpep_dropoff_datetime) = 2017) and month(tpep_pickup_datetime) in (11,12) and  month(tpep_dropoff_datetime) in (11,12) group by VendorID;\\n/********Result ********\\n1\\t8446659\\n2\\t10344381\\n****************************/\\n\\n/********** Get the count of tripts grouped by vendoid and drop month *************************/\\n select vendorid, month(tpep_dropoff_datetime), count (*) from rk_hive_test_db.nyc_taxi_data_part_clus_orc_rk \\nwhere vendorid is not null and (year(tpep_pickup_datetime) = 2017 and year(tpep_dropoff_datetime) = 2017) \\nand month(tpep_pickup_datetime) in (11,12) and  month(tpep_dropoff_datetime) in (11,12) group by vendorid,month(tpep_dropoff_datetime);\\n\\n/********Result ********\\n1\\t1\\t11\\t4187308\\n2\\t1\\t12\\t4259351\\n3\\t2\\t11\\t5093265\\n4\\t2\\t12\\t5251116\\n****************************/\\n\\n/********** Get the count of tripts grouped by vendoid and pickup month *************************/\\n select vendorid, month(tpep_pickup_datetime), count (*) from rk_hive_test_db.nyc_taxi_data_part_clus_orc_rk \\nwhere vendorid is not null and (year(tpep_pickup_datetime) = 2017 and year(tpep_dropoff_datetime) = 2017) \\nand month(tpep_pickup_datetime) in (11,12) and  month(tpep_dropoff_datetime) in (11,12) group by vendorid,month(tpep_pickup_datetime);\\n/********Result ********\\n1\\t1\\t11\\t4188894\\n2\\t1\\t12\\t4257765\\n3\\t2\\t11\\t5095821\\n4\\t2\\t12\\t5248560\\n****************************/\\n\\n/*****************Check for missing values for each column ************************/\\nselect * from rk_hive_test_db.nyc_taxi_data_part_clus_orc_rk where vendorid is not null and \\n(tpep_pickup_datetime is null or tpep_dropoff_datetime is null or passenger_count is null or trip_distance is null or\\n ratecodeid is null or store_and_fwd_flag is null or pulocationid is null or dolocationid is null or payment_type is null or\\n fare_amount is null or extra is null or mta_tax is null or tip_amount is null or tolls_amount is null or improvement_surcharge is null or total_amount is null) ;\\n/***** 0 results  . no missing data ****************/\\n\\n \\n /*********Check the count of trips grouped by  passenger_count ***********/\\n select passenger_count,count(*) from rk_hive_test_db.nyc_taxi_data_part_clus_orc_rk \\nwhere vendorid is not null and (year(tpep_pickup_datetime) = 2017 and year(tpep_dropoff_datetime) = 2017)\\nand month(tpep_pickup_datetime) in (11,12) and  month(tpep_dropoff_datetime) in (11,12)\\n group by  passenger_count;\\n\\n /**************\\n1   0\\t108965\\n2\\t1\\t13250091\\n3\\t2\\t2815818\\n4\\t3\\t810689\\n5\\t4\\t398801\\n6\\t5\\t875733\\n7\\t6\\t530959\\n8\\t7\\t75\\n9\\t8\\t60\\n10\\t9\\t56\\n11\\t192\\t1\\n************************/\\n/********Here we can see one invalid passenger count 192 also for one trip **************/\\n\\n/****** Check the trip counts and average fares grouped by vendorid,passenger_count ***********************/\\n select vendorid,passenger_count,count(*),sum(fare_amount) from rk_hive_test_db.nyc_taxi_data_part_clus_orc_rk \\nwhere vendorid is not null and (year(tpep_pickup_datetime) = 2017 and year(tpep_dropoff_datetime) = 2017)\\nand month(tpep_pickup_datetime) in (11,12) and  month(tpep_dropoff_datetime) in (11,12)\\n group by  vendorid,passenger_count;\\n\\n/******* Here we are showing count for only passenger_count 0 and 192 to check if their is any amount for fare charged ***********/\\n2\\t192\\t1\\t6.5\\n1\\t0\\t\\t108745\\t1373328.3600013666\\n2\\t0\\t\\t220\\t11912.84000856243\\n**************************************************************/\\n\\n/************Check trip_distance related results grouped by vendorid ***************************/\\nselect vendorid,min(trip_distance),max(trip_distance),avg(trip_distance), variance(trip_distance) from rk_hive_test_db.nyc_taxi_data_part_clus_orc_rk \\nwhere vendorid is not null and (year(tpep_pickup_datetime) = 2017 and year(tpep_dropoff_datetime) = 2017) \\nand month(tpep_pickup_datetime) in (11,12) and  month(tpep_dropoff_datetime) in (11,12) group by vendorid;\\n/*******************************\\n1\\t0\\t702.5\\t2.773332343498796\\t12.848873972886192\\n2\\t0\\t687.219970703125\\t2.9456372376474365\\t14.32363363111327\\n***************************************/\\n\\n/************Check trip counts grouped by vendorid when trip_distance is 0 ***************************/\\nselect vendorid, count(*) from rk_hive_test_db.nyc_taxi_data_part_clus_orc_rk \\nwhere vendorid is not null and (year(tpep_pickup_datetime) = 2017 and year(tpep_dropoff_datetime) = 2017)\\nand month(tpep_pickup_datetime) in (11,12) and  month(tpep_dropoff_datetime) in (11,12)\\nand trip_distance = 0 group by vendorid;\\n/*******************************\\n1\\t68747\\n2\\t51252\\n***************************************/\\n\\n/************Check trip counts grouped by vendorid passenger_count and when trip_distance is 0 ***************************/\\nselect vendorid, count(*),avg(total_amount) from rk_hive_test_db.nyc_taxi_data_part_clus_orc_rk \\nwhere vendorid is not null and (year(tpep_pickup_datetime) = 2017 and year(tpep_dropoff_datetime) = 2017)\\nand month(tpep_pickup_datetime) in (11,12) and  month(tpep_dropoff_datetime) in (11,12)\\nand trip_distance = 0 and passenger_count =0 group by vendorid;\\n\\n/*******************************\\n1\\t1521\\t22.929559541367762\\n2\\t154\\t\\t50.9985068401733\\n***************************************/\\n\\n/************Check trip counts grouped by vendorid ratecodeid  ***************************/\\n select vendorid,ratecodeid,count(*),avg(fare_amount),avg(extra),avg(mta_tax),avg(tip_amount),avg(tolls_amount),avg(improvement_surcharge)\\n ,avg(total_amount) from rk_hive_test_db.nyc_taxi_data_part_clus_orc_rk \\nwhere vendorid is not null and (year(tpep_pickup_datetime) = 2017 and year(tpep_dropoff_datetime) = 2017)\\nand month(tpep_pickup_datetime) in (11,12) and  month(tpep_dropoff_datetime) in (11,12)\\n group by  vendorid,ratecodeid;\\n \\n/*****************************************************************************************************\\n1   1\\t[99]\\t172\\t53.844767576040226\\t0.04941860465116279\\t1.9648255726625754\\t1.398313961749853\\t0.6945348894873331\\t\\n2\\t1\\t[1]\\t8231740\\t11.807127846754613\\t0.3117672752054496\\t0.49991282159024253\\t1.669586656696165\\t0.18808172374333731\\t\\n3\\t1\\t[2]\\t167900\\t52.008505182305996\\t0.7893644431197019\\t0.499815366289458\\t7.042671404374567\\t4.365589268085818\\t\\n4\\t1\\t[3]\\t18209\\t64.05921137879568\\t0.22035806553126416\\t0\\t9.494640560981093\\t13.443019388069352\\t\\n5\\t1\\t[4]\\t4121\\t62.34545013239823\\t0.3593787915554477\\t0.49866537248240717\\t7.269386072017775\\t1.4924145159111588\\t\\n6\\t1\\t[5]\\t24385\\t54.021628051751186\\t0.0002050440844781628\\t0.001455812999794956\\t6.044001213114526\\t3.2277937466515847\\t\\n7\\t2\\t[99]\\t6\\t6.03333334128062\\t0.5\\t0\\t0\\t0.25\\t\\n8\\t1\\t[6]\\t132\\t38.208712137106694\\t0\\t0.49242424242424243\\t1.2603030362815568\\t0.17454546148126776\\t\\n9\\t2\\t[1]\\t10042574\\t11.924984285901713\\t0.3104288103820592\\t0.49910296901969553\\t1.706213792236551\\t0.20755594837560284\\t\\n10\\t2\\t[2]\\t236731\\t51.74068858746767\\t0.811905496119627\\t0.4975077197325234\\t7.577127450812835\\t4.3709367179666305\\t\\n11\\t2\\t[3]\\t21965\\t67.78005918506715\\t0.1794992032855403\\t0\\t10.954187109905462\\t13.61617710554\\t\\n12\\t2\\t[4]\\t5621\\t73.9428037715709\\t0.3577655221490838\\t0.49973314356876003\\t9.03184841825678\\t3.07527670001797\\t\\n13\\t2\\t[5]\\t37675\\t63.03761804874292\\t4.777704237625942e-05\\t0.28062375580623755\\t7.403481613748918\\t2.8902513818671234\\t\\n14\\t2\\t[6]\\t17\\t4.176470588235294\\t0.1882353004287271\\t0.5\\t0.8823529411764706\\t0\\n***************************************************************************************************************/\\n/**********************************************************\\nVendor 2 has higher fares for same ratecodeid compared to vendor 1\\nVendor 1 has more records 172 with invalid ratecodeid 99 compared to vendor 2 which has 6\\n****************************************************************************/\\n \\n /************Check trip counts grouped by vendorid , payment_type  ***************************/\\n select vendorid,payment_type,count(*),avg(fare_amount),avg(extra),avg(mta_tax),avg(tip_amount),avg(tolls_amount),avg(improvement_surcharge)\\n ,avg(total_amount) from rk_hive_test_db.nyc_taxi_data_part_clus_orc_rk \\nwhere vendorid is not null and (year(tpep_pickup_datetime) = 2017 and year(tpep_dropoff_datetime) = 2017)\\nand month(tpep_pickup_datetime) in (11,12) and  month(tpep_dropoff_datetime) in (11,12)\\n group by  vendorid,payment_type;\\n \\n/******************************************************************************************** \\nA numeric code signifying how the passenger paid for the trip.  1= Credit card 2= Cash 3= No charge 4= Dispute 5= Unknown 6= Voided trip \\n\\n1\\t1\\t[1]\\t5656789\\t13.21565668969973\\t0.32704141519200386\\t0.4974791140340064\\t2.7005109866651513\\t0.34657305356464885\\t0.299990996205118\\t17.387252226866092\\n2\\t1\\t[2]\\t2671182\\t11.802571685547457\\t0.30467568290082475\\t0.49814040376126684\\t9.901983305834854e-06\\t0.2194838686536838\\t0.29992139503584037\\t13.124802971933708\\n3\\t1\\t[3]\\t93993\\t21.60384285214098\\t0.34559594873238386\\t0.47708680433641704\\t0.003858691625595194\\t0.5322526242189952\\t0.2998021248363684\\t23.262439056168706\\n4\\t1\\t[4]\\t24695\\t14.773363028834101\\t0.327854221527044\\t0.4844681108980243\\t0.003753796321801701\\t0.5753674931282649\\t0.29998786371230696\\t16.46479446621143\\n5\\t2\\t[1]\\t6980979\\t13.700720461977241\\t0.3283775384508509\\t0.4977529655940807\\t2.7932857965253937\\t0.3970576240691896\\t0.2999043949555323\\t18.02451511788273\\n6\\t2\\t[2]\\t3354257\\t12.141315698248487\\t0.30609133408649275\\t0.4988223919634065\\t0\\t0.23040371287578945\\t0.2998498296239667\\t13.476568703701902\\n7\\t2\\t[3]\\t6519\\t-9.161796288393937\\t-0.37436723423838014\\t-0.48619420156465715\\t-0.1051649024867494\\t-0.029641050048210188\\t-0.2998619539310896\\t-10.460316054530992\\n8\\t2\\t[4]\\t2834\\t-8.530769230028906\\t-0.3514467184191955\\t-0.4827099505998589\\t-0.12236415034839614\\t-0.03585038895159434\\t-0.2997882970219022\\t-9.82705\\n\\nVendor 1 has more disputed (24695) and no charge records (93993)  compare to vendor 2 disputed (2834) and no charge records (6519) \\nWe don't have any records for payment type 5 and 6\\n********************************************************************************************************************/\\n\\n /************Check trip counts grouped by vendorid  to analyze the fare amount charged by each vendor  ***************************/\\n select vendorid,count(*),avg(fare_amount),avg(extra),avg(mta_tax),avg(tip_amount),avg(tolls_amount),avg(improvement_surcharge)\\n ,avg(total_amount), (avg(total_amount) - avg(fare_amount)) as fare_extra_difference from rk_hive_test_db.nyc_taxi_data_part_clus_orc_rk \\nwhere vendorid is not null and (year(tpep_pickup_datetime) = 2017 and year(tpep_dropoff_datetime) = 2017)\\nand month(tpep_pickup_datetime) in (11,12) and  month(tpep_dropoff_datetime) in (11,12)\\n group by  vendorid;\\n \\n/********************************************************************************************************\\n1\\t8446659\\t12.86667742019797\\t0.32017729613741536\\t0.49742327942867837\\t1.8086089048638374\\t0.3091173347343629\\t0.2999668745572539\\t16.101971101578386 3.2352936813804156\\n2\\t10344589\\t13.174581711268697\\t0.32052208164056\\t0.49721105401094234\\t1.8849310626590048\\t0.34263220821522833\\t0.29934444694185897\\t16.524252027113768 3.3496703158450707\\n\\nVendor 2 avergae fare is little bit higher than vendor 1 and also people pay bit extra for vendor 2 than vendor 1\\n********************************************************************************************************************/\\n\\n/*****************Summary of Identification of the data quality issues. **********************************\\nCommonn data quality issues :\\n1. Their are few null rows.\\n2. Data includes years other than 2017 \\n3. Data includes month other than Nov and Dec in year 2017\\n4. Invalid passenger count 192 found for one trip \\n5. Few trips are such that trip starts on one date and completes on next date causing change of dates for single trip\\n6. Trip with 0 trip distance or 0 passenger count but fares showing some amount.\\n \\n***************Vendor specific Issues ***********************************\\n\\n1.\\tVendor 1 has more disputed (24695) and no charge records (93993)  compare to vendor 2 disputed (2834) and no charge records (6519) \\n2.\\tVendor 1 has more records 172 with invalid ratecodeid 99 compared to vendor 2 which has 6\\n3.\\tVendor 1 has  67226 records with trip_distance = 0 and passenger_count <> 0 which is much higher compared to Vendor 2 which has 51101 records with trip_distance = 0 and passenger_count <> 0 \\n4.\\tVendor 1 has  1521 records with trip_distance = 0 and passenger_count =0 with some amount charged which is much higher compared to \\n5.\\tVendor 2 which has  154 records with trip_distance = 0 and passenger_count =0 with some amount charged\\n6.\\tVendor 1 has  108745 records with passenger_count =0 compared to vendor 2 220 records with passenger_count =0 \\n\\n****************************************************************************************/\\n\\n/***********************Conclude which vendor is doing a bad job in providing the records? *************************************/\\nBased upon above analysis, vendor 1 has more bad quality data compared to vendor 2 since vendor 1 records has more data quality issues.\\nVendor 2 is charging little bit higher fare than vendor 1 but data quality issues are less and vendor 2 seems to be more reliable.\\n/*************************************************************************************************************************************/\\n\\n/****************************Analysis-I *******************************************************/\\n\\n/****************************Compare the overall average fare for November and December.********************/\\n\\n select month(tpep_pickup_datetime),month(tpep_dropoff_datetime),count(*),avg(fare_amount) as avg_fare,avg(extra) as avg_extra,avg(mta_tax) as avg_mta_tax,avg(tip_amount)as avg_tip_amt,avg(tolls_amount) as avg_toll_amt,\\n avg(improvement_surcharge) as avg_impov_surchg,avg(total_amount) as avg_total_amt from rk_hive_test_db.nyc_taxi_data_part_clus_orc_rk \\nwhere vendorid is not null and (year(tpep_pickup_datetime) = 2017 and year(tpep_dropoff_datetime) = 2017)\\nand month(tpep_pickup_datetime) in (11,12) and  month(tpep_dropoff_datetime) in (11,12)\\n group by  month(tpep_pickup_datetime),month(tpep_dropoff_datetime);\\n \\n/***************************Result***************************************************************************************\\n_c1\\t_c2\\tavg_fare\\tavg_extra\\tavg_mta_tax\\tavg_tip_amt\\tavg_toll_amt\\tavg_impov_surchg\\tavg_total_amt\\n_c1\\t_c2\\tavg_fare\\tavg_extra\\tavg_mta_tax\\tavg_tip_amt\\tavg_toll_amt\\tavg_impov_surchg\\tavg_total_amt\\n11\\t11\\t9280573\\t13.13774634496685\\t0.31851288277194545\\t0.4973421845824935\\t1.887745591916017\\t0.34049085958847297\\t0.2996330571934986\\t16.48389305131759\\n11\\t12\\t4142\\t20.1494954121072\\t0.4734427812650893\\t0.49770642201834864\\t2.9114968661508485\\t0.5450893490859012\\t0.29971029679594496\\t24.87882412573613\\n12\\t12\\t9506325\\t12.93393897867545\\t0.32210797337618075\\t0.49727132935161117\\t1.813925691480482\\t0.314861186768894\\t0.29961556260463323\\t16.184828242180174\\n\\nHere we will assume that average fare where pick up and drop dates are not same will  be applicable for both Nov and Dec months , so will not include\\nin analysing average fare.\\nWe can see that average fare in December month 9506325 is slighly higher than Novemeber month\\n************************************************************************************************************************/\\n\\n/********Explore the \\u2018number of passengers per trip\\u2019 - how many trips are made by each level of \\u2018Passenger_count\\u2019? ***********\\n*********Do most people travel solo or with other people? ******************************************************/\\n\\n select passenger_count,count(*) as count from rk_hive_test_db.nyc_taxi_data_part_clus_orc_rk \\nwhere vendorid is not null and (year(tpep_pickup_datetime) = 2017 and year(tpep_dropoff_datetime) = 2017)\\nand month(tpep_pickup_datetime) in (11,12) and  month(tpep_dropoff_datetime) in (11,12)\\n group by  passenger_count;\\n \\n/***************************Result*************************************************************************************** \\npassenger_count\\t_c1\\npassenger_count\\t_c1\\n0\\t108965\\n1\\t13249946\\n2\\t2815794\\n3\\t810682\\n4\\t398798\\n5\\t875708\\n6\\t530955\\n7\\t75\\n8\\t60\\n9\\t56\\n192\\t1\\n\\nHere we can see the number of trips made by each level of 'Passenger_count' as above.\\nWe can conclude that ost people travel solo (13249946) .\\n************************************************************************************************************************/\\n\\n/********Which is the most preferred mode of payment?*******************************************************/\\n\\n select payment_type,count(*) as count,avg(fare_amount) as avg_fare,avg(extra) as avg_extra,avg(mta_tax) as avg_mta_tax,avg(tip_amount)as avg_tip_amt,avg(tolls_amount) as avg_toll_amt,\\n avg(improvement_surcharge) as avg_impov_surchg,avg(total_amount) from rk_hive_test_db.nyc_taxi_data_part_clus_orc_rk \\nwhere vendorid is not null and (year(tpep_pickup_datetime) = 2017 and year(tpep_dropoff_datetime) = 2017)\\nand month(tpep_pickup_datetime) in (11,12) and  month(tpep_dropoff_datetime) in (11,12)\\n group by  payment_type;\\n \\n /***************************Result***************************************************************************************\\npayment_type is a numeric code signifying how the passenger paid for the trip.  1= Credit card 2= Cash 3= No charge 4= Dispute 5= Unknown 6= Voided trip \\n \\npayment_type\\tcount\\tavg_fare\\tavg_extra\\tavg_mta_tax\\tavg_tip_amt\\tavg_toll_amt\\tavg_impov_surchg\\t_c8\\n[1]\\t12637627\\t13.483599509623382\\t0.32777838592638026\\t0.4976303605097154\\t2.7517616915175047\\t0.3744635011396812\\t0.2999431578905398\\t17.739273350946984\\n[2]\\t6025372\\t11.991170538549971\\t0.30546192002773404\\t0.4985200382648288\\t4.389770386101731e-06\\t0.22556430805889865\\t0.2998815544996766\\t13.32065049303949\\n[3]\\t100512\\t19.608447261991074\\t0.29890062887220387\\t0.41461039477866174\\t-0.0032123527275006985\\t0.49580936508030615\\t0.2609091555442933\\t21.075251053078016\\n[4]\\t27529\\t12.374296196707334\\t0.2579229176726489\\t0.38490101342681204\\t-0.009229539827834707\\t0.5124450666756396\\t0.23824331652495\\t13.758153914652882\\n\\nHere payment_type 1  (Credit card) is the most preferred mode of payment;\\n************************************************************************************************************************/\\n\\n/********What is the average tip paid? Compare the average tip with the 25th, 50th and 75th percentiles and comment whether the \\u2018average tip\\u2019 *************\\nis a representative statistic (of the central tendency) of \\u2018tip amount paid\\u2019.\\n**********************************************************************************************************************************/\\n\\n select avg(tip_amount)as avg_tip_amt from rk_hive_test_db.nyc_taxi_data_part_clus_orc_rk \\nwhere vendorid is not null and (year(tpep_pickup_datetime) = 2017 and year(tpep_dropoff_datetime) = 2017)\\nand month(tpep_pickup_datetime) in (11,12) and  month(tpep_dropoff_datetime) in (11,12);\\n/***************************Result***************************************************************************************\\navg_tip_amt\\n1.8506260079424872\\nAverage tip paid is 1.8506260079424872\\n************************************************************************************************************************/\\n\\n/********Checking distinct tip_amount to decide on B paramter in percentile_approx function **************************/\\nselect count(distinct tip_amount)as count from rk_hive_test_db.nyc_taxi_data_part_clus_orc_rk \\nwhere vendorid is not null and (year(tpep_pickup_datetime) = 2017 and year(tpep_dropoff_datetime) = 2017)\\nand month(tpep_pickup_datetime) in (11,12) and  month(tpep_dropoff_datetime) in (11,12);\\n\\n/**************************Result  4141 (B value should be more than this count)*********************************/\\n\\n/************* Get average tip along with the 25th, 50th and 75th percentiles tip amount ************************/\\nselect avg(tip_amount)as avg_tip_amt,percentile_approx(tip_amount, 0.25,4200) as tip_25_percentile, percentile_approx(tip_amount, 0.5,4200) as tip_50_percentile,\\npercentile_approx(tip_amount, 0.75,4200) as tip_75_percentile from rk_hive_test_db.nyc_taxi_data_part_clus_orc_rk \\nwhere vendorid is not null and (year(tpep_pickup_datetime) = 2017 and year(tpep_dropoff_datetime) = 2017)\\nand month(tpep_pickup_datetime) in (11,12) and  month(tpep_dropoff_datetime) in (11,12);\\n\\n/***************************Result***************************************************************************************\\navg_tip_amt\\t\\t\\ttip_25_percentile\\t\\ttip_50_percentile\\ttip_75_percentile\\n1.8506260079424872\\t-0.005955277471055294\\t1.351981399324019\\t2.448505088955382\\n\\nHere 'average tip' is not a representative statistic (of the central tendency) of \\u2018tip amount paid\\u2019 as the tip amount \\nmedian value is 1.351981399324019 which  is lower than the average tip amount 1.8506260079424872\\n************************************************************************************************************************/\\n\\n/********Explore the \\u2018Extra\\u2019 (charge) variable - what fraction of total trips have an extra charge is levied? ***************/\\n\\n select avg(tip_amount)as avg_tip_amt , avg(extra) as avg_extra,sum(tip_amount)as total_tip_amt , sum(extra) as total_extra, \\n( avg(extra)/avg(tip_amount))*100 as fraction_avg_extra_of_tip,( sum(extra)/sum(tip_amount))*100 as fraction_total_extra_of_tip from rk_hive_test_db.nyc_taxi_data_part_clus_orc_rk \\nwhere vendorid is not null and (year(tpep_pickup_datetime) = 2017 and year(tpep_dropoff_datetime) = 2017)\\nand month(tpep_pickup_datetime) in (11,12) and  month(tpep_dropoff_datetime) in (11,12);\\n\\n/***************************Result***************************************************************************************\\navg_tip_amt\\t\\t\\tavg_extra\\t\\t\\ttotal_tip_amt\\t\\ttotal_extra\\t\\t fraction_avg_extra_of_tip\\tfraction_total_extra_of_tip\\n1.8506260079424872\\t0.3203657775200736\\t34775187.340287596\\t6020006.140010804\\t17.31121124123042\\t\\t17.31121124123042\\n\\nHere average or total tip amount is much higher than average or total extra amount.\\nAlso Extra amount is around 17.3% of total tip amount generally.\\n************************************************************************************************************************/\\n\\n/***************************Analysis-II ************************************************************/\\n\\n/**********What is the correlation between the number of passengers and tip paid? Do multiple travellers pay more compared to solo travellers? **********/\\n\\n/************* Get the average tip amount for each level of passenger_count **************************/\\n select passenger_count,avg(tip_amount)as avg_tip_amt from rk_hive_test_db.nyc_taxi_data_part_clus_orc_rk \\nwhere vendorid is not null and (year(tpep_pickup_datetime) = 2017 and year(tpep_dropoff_datetime) = 2017)\\nand month(tpep_pickup_datetime) in (11,12) and  month(tpep_dropoff_datetime) in (11,12)\\n group by  passenger_count;\\n \\n/***************************Result***************************************************************************************\\n  passenger_count\\tavg_tip_amt\\n\\n1\\t0\\t1.7632504947897043\\n2\\t1\\t1.8579490524419435\\n3\\t2\\t1.8641309281270322\\n4\\t3\\t1.7727101509516048\\n5\\t4\\t1.631771223140227\\n6\\t5\\t1.8734892117975077\\n7\\t6\\t1.8583563585532976\\n8\\t7\\t3.630133365790049\\n9\\t8\\t8.546833296616873\\n10\\t9\\t6.2632143050432205\\n11\\t192\\t1.2400000095367432\\n\\nWe don't see any clear trend where average tip amount is increasing with passenger count.\\nBut when passenger count is more than 6 then we see that average tip amount is much higher.\\n\\n************************************************************************************************************************/\\n\\n/*************** Get the corelation between passenger_count and  tip_amount *********************/\\nselect corr(passenger_count,tip_amount)\\nfrom rk_hive_test_db.nyc_taxi_data_part_clus_orc_rk \\nwhere vendorid is not null and (year(tpep_pickup_datetime) = 2017 and year(tpep_dropoff_datetime) = 2017)\\nand month(tpep_pickup_datetime) in (11,12) and  month(tpep_dropoff_datetime) in (11,12);\\n\\n/***************************Result***************************************************************************************\\n-0.0037971068726033474\\n\\nCorrelation tells that both are not much linearly related . It has a sligh negative corelation .\\n************************************************************************************************************************/\\n\\n\\n/***************Create five buckets of \\u2018tip paid\\u2019: [0-5), [5-10), [10-15) , [15-20) and >=20.  ************************/\\n/***************Calculate the percentage share of each bucket (i.e. the fraction of trips falling in each bucket).*****/\\n\\n/*********** Get total tip amount ***************************************/\\nselect sum(tip_amount) as total_tip_amount_in_bucket\\n   from rk_hive_test_db.nyc_taxi_data_part_clus_orc_rk \\n\\twhere vendorid is not null and (year(tpep_pickup_datetime) = 2017 and year(tpep_dropoff_datetime) = 2017)\\n\\tand month(tpep_pickup_datetime) in (11,12) and  month(tpep_dropoff_datetime) in (11,12);\\n\\n/***************************Result***************************************************************************************\\n34775187.340287596\\n************************************************************************************************************************/\\n\\t\\n/*********** Get  tip amount for bucket [0-5) and faction of total tip amount***************************************/\\nselect sum(tip_amount)  as tip_amount_1_5_bucket,(sum(tip_amount)/(34775187))*100 as tip_1_5_bucket_fraction\\n   from rk_hive_test_db.nyc_taxi_data_part_clus_orc_rk \\n\\twhere vendorid is not null and (year(tpep_pickup_datetime) = 2017 and year(tpep_dropoff_datetime) = 2017)\\n\\tand month(tpep_pickup_datetime) in (11,12) and  month(tpep_dropoff_datetime) in (11,12)\\n   and tip_amount > 0 and tip_amount <= 5  ;\\n\\n /***************************Result***************************************************************************************\\ntip_amount_1_5_bucket\\ttip_1_5_bucket_fraction\\n22998149.883710835\\t\\t66.13379213089733\\n************************************************************************************************************************/\\n\\n/*********** Get  tip amount for bucket [5-10) and faction of total tip amount***************************************/\\nselect sum(tip_amount)  as tip_amount_5_10_bucket,(sum(tip_amount)/(34775187))*100 as tip_5_10_bucket_fraction\\n   from rk_hive_test_db.nyc_taxi_data_part_clus_orc_rk \\n\\twhere vendorid is not null and (year(tpep_pickup_datetime) = 2017 and year(tpep_dropoff_datetime) = 2017)\\n\\tand month(tpep_pickup_datetime) in (11,12) and  month(tpep_dropoff_datetime) in (11,12)\\n   and tip_amount > 5 and tip_amount <= 10  ;\\n   \\n /***************************Result***************************************************************************************   \\ntip_amount_5_10_bucket\\ttip_5_10_bucket_fraction   \\n6814925.98917532\\t19.59709372425609\\n************************************************************************************************************************/\\n\\n/*********** Get  tip amount for bucket [10-15) and faction of total tip amount***************************************/\\nselect sum(tip_amount)  as tip_amount_10_15_bucket,(sum(tip_amount)/(34775187))*100 as tip_10_15_bucket_fraction\\n   from rk_hive_test_db.nyc_taxi_data_part_clus_orc_rk \\n\\twhere vendorid is not null and (year(tpep_pickup_datetime) = 2017 and year(tpep_dropoff_datetime) = 2017)\\n\\tand month(tpep_pickup_datetime) in (11,12) and  month(tpep_dropoff_datetime) in (11,12)\\n   and tip_amount > 10 and tip_amount <= 15  ;\\n   \\n/***************************Result***************************************************************************************   \\n tip_amount_10_15_bucket\\ttip_10_15_bucket_fraction   \\n3735927.5992069244\\t10.743084139869396\\n************************************************************************************************************************/\\n\\n/*********** Get  tip amount for bucket [15-20) and faction of total tip amount***************************************/\\nselect sum(tip_amount)  as tip_amount_15_20_bucket,(sum(tip_amount)/(34775187))*100 as tip_15_20_bucket_fraction\\n   from rk_hive_test_db.nyc_taxi_data_part_clus_orc_rk \\n\\twhere vendorid is not null and (year(tpep_pickup_datetime) = 2017 and year(tpep_dropoff_datetime) = 2017)\\n\\tand month(tpep_pickup_datetime) in (11,12) and  month(tpep_dropoff_datetime) in (11,12)\\n   and tip_amount > 15 and tip_amount <= 20  ;\\n   \\n/***************************Result***************************************************************************************    \\n tip_amount_15_20_bucket\\ttip_15_20_bucket_fraction   \\n 730931.1184225082\\t2.1018754505116197\\n ************************************************************************************************************************/\\n \\n/*********** Get  tip amount for bucket 20+ and faction of total tip amount***************************************/\\nselect sum(tip_amount)  as tip_amount_20_plus__bucket,(sum(tip_amount)/(34775187))*100 as tip_20__plus_bucket_fraction\\n   from rk_hive_test_db.nyc_taxi_data_part_clus_orc_rk \\n\\twhere vendorid is not null and (year(tpep_pickup_datetime) = 2017 and year(tpep_dropoff_datetime) = 2017)\\n\\tand month(tpep_pickup_datetime) in (11,12) and  month(tpep_dropoff_datetime) in (11,12)\\n   and tip_amount > 20   ;   \\n   \\n/***************************Result***************************************************************************************    \\n    tip_amount_10_15_bucket\\ttip_10_15_bucket_fraction   \\n   496285.099773407\\t\\t\\t1.4271241726849866\\n ************************************************************************************************************************/\\n   \\n   \\n/***********Which month has a greater average \\u2018speed\\u2019 - November or December? Note that the variable \\u2018speed\\u2019 will have to be derived from other metrics.**********/\\n \\n /*** Get the average speed grouped by both pick up and drop month ***************************/\\n select month(tpep_pickup_datetime),month(tpep_dropoff_datetime), avg(trip_distance/((unix_timestamp(tpep_dropoff_datetime) - unix_timestamp(tpep_pickup_datetime))/3600)) as avg_speed from rk_hive_test_db.nyc_taxi_data_part_clus_orc_rk \\nwhere vendorid is not null and (year(tpep_pickup_datetime) = 2017 and year(tpep_dropoff_datetime) = 2017)\\nand month(tpep_pickup_datetime) in (11,12) and  month(tpep_dropoff_datetime) in (11,12)\\n group by  month(tpep_pickup_datetime),month(tpep_dropoff_datetime);\\n \\n/***************************Result***************************************************************************************  \\n11\\t11\\t12.758605943227732\\n11\\t12\\t12.449429489227986\\n12\\t12\\t12.705483616452682\\n\\nHere we will assume that trips where date changes will be applicable for both Nov and Dec months and hence won't consider it.\\nNovember month has greater average spped 12.758605943227732 compared to December month 12.705483616452682 .\\n ************************************************************************************************************************/\\n \\n/************Analyse the average speed of the most happening days of the year i.e. 31st December (New year\\u2019s eve) and 25th December (Christmas Eve) \\n/******and compare it with the overall average.  ************************/\\n\\n/*** Get the overall average speed ***************************/\\n select avg(trip_distance/((unix_timestamp(tpep_dropoff_datetime) - unix_timestamp(tpep_pickup_datetime))/3600)) as overall_avg_speed from rk_hive_test_db.nyc_taxi_data_part_clus_orc_rk \\nwhere vendorid is not null and (year(tpep_pickup_datetime) = 2017 and year(tpep_dropoff_datetime) = 2017)\\nand month(tpep_pickup_datetime) in (11,12) and  month(tpep_dropoff_datetime) in (11,12);\\n\\n/***************************Result*************************************************************************************** \\noverall_avg_speed\\n12.731662670638789\\n************************************************************************************************************************/\\n\\n/*** Get the  average speed for 25th December ***************************/\\n select day(tpep_pickup_datetime), day(tpep_dropoff_datetime),avg(trip_distance/((unix_timestamp(tpep_dropoff_datetime) - unix_timestamp(tpep_pickup_datetime))/3600)) as overall_avg_speed from rk_hive_test_db.nyc_taxi_data_part_clus_orc_rk \\nwhere vendorid is not null and (year(tpep_pickup_datetime) = 2017 and year(tpep_dropoff_datetime) = 2017)\\nand month(tpep_pickup_datetime) = 12 and  month(tpep_dropoff_datetime) = 12 and day(tpep_pickup_datetime) = 25 and  day(tpep_dropoff_datetime) in (25,26)\\ngroup by day(tpep_pickup_datetime), day(tpep_dropoff_datetime);\\n\\n/***************************Result*************************************************************************************** \\n25\\t25\\t16.804706410414326\\n25\\t26\\t13.000195784866202\\n\\nHere we can see that average speed is less when date changes . \\nAverage spped on 25th Dec in year 2017 is higher compared to overall_avg_speed 12.731662670638789\\n************************************************************************************************************************/\\n\\n/*** Get the  average speed for 31st December ***************************/\\n select avg(trip_distance/((unix_timestamp(tpep_dropoff_datetime) - unix_timestamp(tpep_pickup_datetime))/3600)) as overall_avg_speed from rk_hive_test_db.nyc_taxi_data_part_clus_orc_rk \\nwhere vendorid is not null and (year(tpep_pickup_datetime) = 2017 and year(tpep_dropoff_datetime) = 2017)\\n\\n/***************************Result*************************************************************************************** \\n14.057195690169191\\nAverage spped on 31st Dec in year 2017 is higher compared to overall_avg_speed 12.731662670638789\\n************************************************************************************************************************/\\n\\n\\n/**********************************End of Data Analysis *****************************************************************************/\\n\", \"aceWarnings\": [], \"compatibilityCheckRunning\": false, \"result\": {\"statement_id\": 0, \"isMetaFilterVisible\": false, \"meta\": [], \"logLines\": 0, \"id\": \"0ab31d18-6b50-c756-6da7-54aa0dd50975\", \"logs\": \"\", \"statements_count\": 1, \"rows\": null, \"hasSomeResults\": false, \"filteredMetaChecked\": true, \"hasMore\": false, \"filteredMeta\": [], \"type\": \"table\", \"handle\": {}, \"metaFilter\": \"\", \"explanation\": \"\", \"statement_range\": {\"start\": {\"column\": 0, \"row\": 0}, \"end\": {\"column\": 0, \"row\": 0}}, \"startTime\": \"2018-08-26T17:35:00.031Z\", \"data\": [], \"previous_statement_hash\": null, \"executionTime\": 0, \"fetchedOnce\": false, \"hasResultset\": true, \"endTime\": \"2018-08-26T17:35:00.031Z\"}, \"pinnedContextTabs\": [], \"chartXPivot\": null, \"viewSettings\": {\"sqlDialect\": true, \"placeHolder\": \"Example: SELECT * FROM tablename, or press CTRL + space\"}, \"chartScatterGroup\": null, \"loadingQueries\": false, \"hasDataForChart\": false, \"id\": \"bedddc61-cddc-0144-d0de-d586896ea2a7\", \"showLongOperationWarning\": false, \"errors\": [], \"chartMapHeat\": null, \"aceSize\": 100, \"statusForButtons\": \"executed\", \"chartMapLabel\": null, \"chartData\": [], \"lastExecuted\": 0, \"queriesHasErrors\": false, \"showLogs\": false, \"errorsKlass\": \"results hive alert alert-error\", \"isReady\": true, \"statement\": \"/****************************Problem Statement and Purpose*********************************/\\n/*******The New York City Taxi & Limousine Commission (TLC) has provided a dataset of trips made by the taxis in the New York city.**********/\\n/*******The detailed trip-level data is more than just a vast list of taxi pickup and drop off coordinates.**********/\\n/*****The purpose of this dataset is to get a better understanding of the taxi system, so that the city can improve the efficiency of in-city commutes.***/\\n\\n/******************Data Understanding*********************************/\\n/**The records include fields capturing pick-up and drop-off dates/times, pick-up and drop-off locations (location coordinates of the starting and ending points), **/\\n/***trip distances, itemized fares, rate types, payment types, driver-reported passenger counts etc. **/\\n\\n/*****************The dataset has been placed in the HDFS storage of the lab. The path to the data files is as follows: **********/\\n/*******November data: '/common_folder/nyc_taxi_data/nov/' **********/\\n/*******December data: '/common_folder/nyc_taxi_data/dec/' **********/\\n\\n\\n/************************ Schema Creation for Data Set ******************************/\\n\\n\\n/* IMPORTANT: BEFORE CREATING ANY TABLE, MAKE SURE YOU RUN THIS COMMAND */\\nADD JAR /opt/cloudera/parcels/CDH/lib/hive/lib/hive-hcatalog-core-1.1.0-cdh5.11.2.jar;\\n\\n/******** Following type of Schemas can be created for data set analysis *****************/\\n/****** 1. Create plain External table using file parent directory to load all the data in subdirectories in the table ******/\\n/****** 2. Create External table with partition option pointing to local location for storing partioned data ******/\\n/****** 3. Create External table with partition and orc option pointing to local location for storing partioned data ******/\\n/****** 4. Create External table with partition and clustering option pointing to local location for storing partioned  ******/\\n/****** 5. Create External table with partition,clustering and orc option pointing to local location for storing partioned data ******/\\n\\n/*******Run following Set commands to allow creation of table from data in multiple sub directories *****************/\\nset hive.input.dir.recursive=true;\\nset hive.mapred.supports.subdirectories=true;\\nset hive.supports.subdirectories=true;\\nset mapreduce.input.fileinputformat.input.dir.recursive=true; \\n\\n/***** table will be dropped if exists **********/\\ndrop table rk_hive_test_db.nyc_taxi_data_rk;\\n\\n/****************************Schema Type 1 : No Partition Table *************************************************/\\n/****** Create plain External table using file parent directory to load all the data in subdirectories in the table ******/\\n\\ncreate external table if not exists rk_hive_test_db.nyc_taxi_data_rk(VendorID int,tpep_pickup_datetime timestamp,tpep_dropoff_datetime timestamp,passenger_count int, trip_distance float,RatecodeID array<int>,store_and_fwd_flag string,PULocationID int,DOLocationID int,payment_type array<int>,fare_amount float,extra float,mta_tax float,tip_amount float,tolls_amount float,improvement_surcharge float,total_amount float)\\n    COMMENT 'NYC Taxi Data'\\n    ROW FORMAT DELIMITED\\n    FIELDS TERMINATED BY ','\\n    STORED AS TEXTFILE\\n    LOCATION '/common_folder/nyc_taxi_data';\\n\\t\\n/*****Describe created table\\t*************/\\ndescribe rk_hive_test_db.nyc_taxi_data_rk;\\n/***************************************************\\n1\\tvendorid\\tint\\t\\n2\\ttpep_pickup_datetime\\ttimestamp\\t- 0 null\\n3\\ttpep_dropoff_datetime\\ttimestamp\\t- 0 null\\n4\\tpassenger_count\\tint\\t- 0 null\\n5\\ttrip_distance\\tfloat\\t- 0 null\\n6\\tratecodeid\\tarray<int>\\t\\n7\\tstore_and_fwd_flag\\tstring\\t\\n8\\tpulocationid\\tint\\t\\n9\\tdolocationid\\tint\\t\\n10\\tpayment_type\\tarray<int>\\t\\n11\\tfare_amount\\tfloat\\t\\n12\\textra\\tfloat\\t\\n13\\tmta_tax\\tfloat\\t\\n14\\ttip_amount\\tfloat\\t\\n15\\ttolls_amount\\tfloat\\t\\n16\\timprovement_surcharge\\tfloat\\t\\n17\\ttotal_amount\\tfloat\\t\\n/***************************************************\\n\\n/******Get the total counts ******************************/\\nselect count(*) from rk_hive_test_db.nyc_taxi_data_rk;\\n/***Total row count : 18793083 ********************/\\n\\n/****************************Schema Type 2 : Partition Table *************************************************/\\n/****** Create External table with partition option pointing to local location for storing partioned data ******/\\n\\n/**************** Deciding fields for partition *******************************/\\n/**** Based upon problem statement and analysis question, most of the time we will be using year and month as filter conditions in where clause, **/\\n/**********So we will use year and month as partitions to improve query performance based upon year and monthS****************************/\\n\\n/************Create the folder to store partition data and give full access *******************/\\t\\n\\n/*************************************************************\\tCreate it if path does not exist********\\nhadoop fs -mkdir /user/hive/warehouse/rknyctaxidata\\nhadoop fs -chmod 777  /user/hive/warehouse/rknyctaxidata\\nhadoop fs -ls /user/hive/warehouse/rknyctaxidata\\n*************************************************************************/\\t\\n\\n/*******Run following Set commands to allow creation of table using partitions *****************/\\nSET hive.exec.max.dynamic.partitions=1000;\\nSET hive.exec.max.dynamic.partitions.pernode=1000;\\nSET hive.exec.dynamic.partition = true;\\nSET hive.exec.dynamic.partition.mode = nonstrict;\\n\\n/***** table will be dropped if exists **********/\\ndrop table nyc_taxi_data_partition_rk;\\n\\n/* Then create external table */\\ncreate external table if not exists rk_hive_test_db.nyc_taxi_data_partition_rk(VendorID int,tpep_pickup_datetime timestamp,tpep_dropoff_datetime timestamp,passenger_count int, trip_distance float,RatecodeID array<int>,store_and_fwd_flag string,PULocationID int,DOLocationID int,payment_type array<int>,fare_amount float,extra float,mta_tax float,tip_amount float,tolls_amount float,improvement_surcharge float,total_amount float) partitioned by (yr int, mnth int)\\nlocation '/user/hive/warehouse/rknyctaxidata';\\n\\n/* Then insert the data in the table */\\ninsert overwrite table nyc_taxi_data_partition_rk partition(yr, mnth)\\nselect VendorID ,tpep_pickup_datetime ,tpep_dropoff_datetime ,passenger_count , trip_distance ,RatecodeID ,store_and_fwd_flag ,PULocationID ,DOLocationID ,payment_type ,fare_amount ,extra ,mta_tax ,tip_amount ,tolls_amount ,improvement_surcharge ,total_amount , year(tpep_pickup_datetime) as yr, month(tpep_pickup_datetime) as mnth\\nfrom nyc_taxi_data_rk;\\n\\n/******Get the total counts ******************************/\\nselect count(*) from nyc_taxi_data_partition_rk;\\n/***Total row count : 18793083 ********************/\\n\\n/****************************Schema Type 3 : Partition with ORC *************************************************/\\n/****** Create External table with partition and orc option pointing to local location for storing partioned data ******/\\n\\n/************Create the folder to store partition data and give full access *******************/\\n/*************************************************************\\tCreate it if path does not exist\\nhadoop fs -mkdir /user/hive/warehouse/rkorcnyctaxidata\\nhadoop fs -chmod 777  /user/hive/warehouse/rkorcnyctaxidata\\nhadoop fs -ls /user/hive/warehouse/rkorcnyctaxidata\\n**********************************************************/\\n\\n\\n/***** table will be dropped if exists **********/\\ndrop table nyc_taxi_data_partition_orc_rk;\\n\\n/* Then create external table */\\ncreate external table if not exists rk_hive_test_db.nyc_taxi_data_partition_orc_rk(VendorID int,tpep_pickup_datetime timestamp,tpep_dropoff_datetime timestamp,passenger_count int, trip_distance float,RatecodeID array<int>,store_and_fwd_flag string,PULocationID int,DOLocationID int,payment_type array<int>,fare_amount float,extra float,mta_tax float,tip_amount float,tolls_amount float,improvement_surcharge float,total_amount float) partitioned by (yr int, mnth int)\\nstored as orc location '/user/hive/warehouse/rkorcnyctaxidata'\\ntblproperties (\\\"orc.compress\\\"=\\\"SNAPPY\\\");\\n\\n/* Then insert the data in the table */\\ninsert overwrite table nyc_taxi_data_partition_orc_rk partition(yr , mnth) select * from nyc_taxi_data_partition_rk;\\n\\n/******Get the total counts ******************************/\\nselect count(*) from nyc_taxi_data_partition_orc_rk;\\n/***Total row count : 18793083 ********************/\\n\\n/****************************Schema Type 4 : Partition Table with Clustering *************************************************/\\n/****** Create External table with partition and clustering option pointing to local location for storing partioned  ******/\\n\\n/********** Determining number of clusters required *************/\\n/*** Todate Data size for both files : 781 MB + 799 MB = 1580 MB ***/\\n/*** Assuming One Block  Size = 128 MB = 12  ***/\\n/*** Total  Number of Clusters required = 1580/128 = 12 *******/\\n\\n/********** Deciding on  clusters column *************/\\n/******We need to run couple of queries using  pick up date and since their are many dates, we will use it as a cluster field for bucketing ************/\\n\\n/************Create the folder to store partition data and give full access *******************/\\n/*************************************************************\\tCreate it if path does not exist\\t\\nhadoop fs -mkdir /user/hive/warehouse/rkclusparnyctaxidata\\nhadoop fs -chmod 777  /user/hive/warehouse/rkclusparnyctaxidata\\nhadoop fs -ls /user/hive/warehouse/rkclusparnyctaxidata\\n******************************************************************************************/\\n\\n/***** table will be dropped if exists **********/\\ndrop table nyc_taxi_data_partition_clus_rk;\\n\\n/* Then create external table */\\n\\tcreate external table if not exists rk_hive_test_db.nyc_taxi_data_partition_clus_rk(VendorID int,tpep_pickup_datetime timestamp,tpep_dropoff_datetime timestamp,passenger_count int, trip_distance float,RatecodeID array<int>,store_and_fwd_flag string,PULocationID int,DOLocationID int,payment_type array<int>,fare_amount float,extra float,mta_tax float,tip_amount float,tolls_amount float,improvement_surcharge float,total_amount float) partitioned by (yr int, mnth int) clustered by (tpep_pickup_datetime) into 12 buckets\\n    location '/user/hive/warehouse/rkclusparnyctaxidata';\\n\\n/* Then insert the data in the table */\\ninsert overwrite table nyc_taxi_data_partition_clus_rk partition(yr , mnth) select * from nyc_taxi_data_partition_rk;\\n\\n/******Get the total counts ******************************/\\nselect count(*) from nyc_taxi_data_partition_clus_rk;\\n/***Total row count : 18793083 ********************/\\n\\n\\n/****************************Schema Type 5 : Partition Table with Clustering and ORC *************************************************/\\n/****** Create External table with partition,clustering and orc option pointing to local location for storing partioned data  ******/\\n\\n/************Create the folder to store partition data and give full access *******************/\\t\\n/*************************************************************\\tCreate it if path does not exist\\nhadoop fs -mkdir /user/hive/warehouse/rkclusorcnyctaxidata\\nhadoop fs -chmod 777  /user/hive/warehouse/rkclusorcnyctaxidata\\nhadoop fs -ls /user/hive/warehouse/rkclusorcnyctaxidata\\n******************************************************************************************/\\n\\n/***** table will be dropped if exists **********/\\ndrop table nyc_taxi_data_part_clus_orc_rk;\\n\\n/* Then create external table */\\n\\tcreate external table if not exists rk_hive_test_db.nyc_taxi_data_part_clus_orc_rk(VendorID int,tpep_pickup_datetime timestamp,tpep_dropoff_datetime timestamp,passenger_count int, trip_distance float,RatecodeID array<int>,store_and_fwd_flag string,PULocationID int,DOLocationID int,payment_type array<int>,fare_amount float,extra float,mta_tax float,tip_amount float,tolls_amount float,improvement_surcharge float,total_amount float) partitioned by (yr int, mnth int) clustered by (tpep_pickup_datetime) into 12 buckets\\n   stored as orc location '/user/hive/warehouse/rkclusorcnyctaxidata'\\n   tblproperties (\\\"orc.compress\\\"=\\\"SNAPPY\\\");\\n\\n/* Then insert the data in the table */\\ninsert overwrite table nyc_taxi_data_part_clus_orc_rk partition(yr , mnth) select * from nyc_taxi_data_partition_rk;\\n\\n/******Get the total counts ******************************/\\nselect count(*) from nyc_taxi_data_part_clus_orc_rk;\\n/***Total row count : 18793083 ********************/\\n\\n/*********** Schema  Creation is complete ******************************/\\n/******** Table nyc_taxi_data_part_clus_orc_rk shoud be more performing table as its a partitioned with clustering and ORC option ************/\\n\\n\\n/*************** Basic Data Quality Checks **************************************************/\\n\\n\\t\\n/******Get the total counts ******************************/\\nselect count(*) from rk_hive_test_db.nyc_taxi_data_part_clus_orc_rk;\\n/***Total row count : 18793083 ********************/\\n\\n/******Get the total counts when vendor id is not null******************************/\\nselect count(*) from rk_hive_test_db.nyc_taxi_data_part_clus_orc_rk where vendorid is not null;\\n/***Total row count when vendor id is not null : 18793079 ********************/\\n\\n/******Get the total counts when vendor id is null******************************/\\nselect count(*) from rk_hive_test_db.nyc_taxi_data_part_clus_orc_rk where vendorid is null;\\n/***Total row count when vendor id is null : 4 ********************/\\n \\n/******Get the total counts of distinct vendor id ******************************/\\nselect count(Distinct vendorid) from rk_hive_test_db.nyc_taxi_data_part_clus_orc_rk where vendorid is not null;\\n/***Total unique vendor id count is  : 2 ********************/\\n/**** 1= Creative Mobile Technologies, LLC; 2= VeriFone Inc *************/\\n\\n/*************How many records has each TPEP provider provided? Write a query that summarises the number of records of each provider. **************/\\n\\nselect VendorID,count(*) from rk_hive_test_db.nyc_taxi_data_part_clus_orc_rk where vendorid is not null group by VendorID;\\n/*****************\\n2\\t\\t10345930\\nnull\\t2\\n1\\t\\t8447149\\n******************/\\n\\n/********************Below are the List of queries ran for checking Data Quality issues and understanding the Data distribution *************/\\n\\n/*** Check the trip count grouped  by vendorid,year(tpep_dropoff_datetime) ***************/\\n select vendorid, year(tpep_dropoff_datetime), count (*) from rk_hive_test_db.nyc_taxi_data_part_clus_orc_rk \\nwhere vendorid is not null group by vendorid,year(tpep_dropoff_datetime);\\n\\n/*********************\\n1\\t1\\t2019\\t1\\n2\\t2\\t2041\\t1\\n3\\t2\\t2017\\t10344589\\n4\\t2\\t2018\\t1268\\n5\\t2\\t2001\\t1\\n6\\t2\\t2003\\t4\\n7\\t2\\t2008\\t15\\n8\\t2\\t2009\\t52\\n9\\t1\\t2016\\t1\\n10\\t1\\t2017\\t8446659\\n11\\t1\\t2018\\t488\\n***********************/\\n\\n/*********** year 2041 is invalid and bad data *******************/\\n/*********It includes  data from years other than 2017 also. We need to analyse data only for 2017**********/\\n\\n/***********Check the count of trips where either of date is not from year 2017 ************************/\\nselect vendorid,year(tpep_pickup_datetime),year(tpep_dropoff_datetime) from rk_hive_test_db.nyc_taxi_data_part_clus_orc_rk \\nwhere vendorid is not null and (year(tpep_pickup_datetime) <> 2017 or year(tpep_dropoff_datetime) <> 2017);\\n\\n/***** 1831 records are such that where either tpep_pickup_datetime or tpep_dropoff_datetime is not from year 2017 *********/\\n/***For our analysis purpose we will assume that only those records are eligible for analysis where both tpep_pickup_datetime and tpep_dropoff_datetime are from 2017 ***/\\n\\n/*******Check tpep_pickup_datetime date range ***************************/\\nselect max(tpep_pickup_datetime),min(tpep_pickup_datetime) from rk_hive_test_db.nyc_taxi_data_part_clus_orc_rk where vendorid is not null;\\n/***** 2041-11-15 02:57:16.0\\t2001-01-01 00:04:13.0 ***********/\\n\\n\\n\\n/*************From here onwards, our analysis of data quality check and understanding will be limited to year 2017 only for not null vendorId **********/\\n\\n/**** Check the uniques months for pick up ***********/\\n select distinct month(tpep_pickup_datetime) from rk_hive_test_db.nyc_taxi_data_part_clus_orc_rk \\nwhere vendorid is not null and (year(tpep_pickup_datetime) = 2017 and year(tpep_dropoff_datetime) = 2017);\\n/********** We can see it includes months : Octover, November and Descember where we don't to analyse data for October month\\n--10\\n--11\\n--12\\n--Vendor 1 has data only for Nov and dec for year 2017 but vendor 2 also has data for month oct, nov and dec for year 2017\\n*********************************************************/\\n\\n  select distinct month(tpep_dropoff_datetime) from rk_hive_test_db.nyc_taxi_data_part_clus_orc_rk \\nwhere vendorid is not null and (year(tpep_pickup_datetime) = 2017 and year(tpep_dropoff_datetime) = 2017);\\n\\n/********** We can see it includes months : Octover, November and Descember where we don't to analyse data for October month\\n--10\\n--11\\n--12\\n*********************************************************/\\n\\n/*******From here onwards, our analysis of data quality check and understanding will be limited to year 2017, months nov and dec and for not null vendorId **********/\\n\\n/********Get the row count for year 2017 and months nov and dec and for not null vendorid ***********/ \\nselect count(*) from rk_hive_test_db.nyc_taxi_data_part_clus_orc_rk \\nwhere vendorid is not null and (year(tpep_pickup_datetime) = 2017 and year(tpep_dropoff_datetime) = 2017)\\nand month(tpep_pickup_datetime) in (11,12) and  month(tpep_dropoff_datetime) in (11,12) ;\\n/***Total row count  : 18791040 ********************/\\n\\n/*************How many records has each TPEP provider provided? This is for year 2017 and months nov and dec and for not null vendorid  **************/\\nselect VendorID,count(*) from rk_hive_test_db.nyc_taxi_data_part_clus_orc_rk where vendorid is not null and (year(tpep_pickup_datetime) = 2017 and year(tpep_dropoff_datetime) = 2017) and month(tpep_pickup_datetime) in (11,12) and  month(tpep_dropoff_datetime) in (11,12) group by VendorID;\\n/********Result ********\\n1\\t8446659\\n2\\t10344381\\n****************************/\\n\\n/********** Get the count of tripts grouped by vendoid and drop month *************************/\\n select vendorid, month(tpep_dropoff_datetime), count (*) from rk_hive_test_db.nyc_taxi_data_part_clus_orc_rk \\nwhere vendorid is not null and (year(tpep_pickup_datetime) = 2017 and year(tpep_dropoff_datetime) = 2017) \\nand month(tpep_pickup_datetime) in (11,12) and  month(tpep_dropoff_datetime) in (11,12) group by vendorid,month(tpep_dropoff_datetime);\\n\\n/********Result ********\\n1\\t1\\t11\\t4187308\\n2\\t1\\t12\\t4259351\\n3\\t2\\t11\\t5093265\\n4\\t2\\t12\\t5251116\\n****************************/\\n\\n/********** Get the count of tripts grouped by vendoid and pickup month *************************/\\n select vendorid, month(tpep_pickup_datetime), count (*) from rk_hive_test_db.nyc_taxi_data_part_clus_orc_rk \\nwhere vendorid is not null and (year(tpep_pickup_datetime) = 2017 and year(tpep_dropoff_datetime) = 2017) \\nand month(tpep_pickup_datetime) in (11,12) and  month(tpep_dropoff_datetime) in (11,12) group by vendorid,month(tpep_pickup_datetime);\\n/********Result ********\\n1\\t1\\t11\\t4188894\\n2\\t1\\t12\\t4257765\\n3\\t2\\t11\\t5095821\\n4\\t2\\t12\\t5248560\\n****************************/\\n\\n/*****************Check for missing values for each column ************************/\\nselect * from rk_hive_test_db.nyc_taxi_data_part_clus_orc_rk where vendorid is not null and \\n(tpep_pickup_datetime is null or tpep_dropoff_datetime is null or passenger_count is null or trip_distance is null or\\n ratecodeid is null or store_and_fwd_flag is null or pulocationid is null or dolocationid is null or payment_type is null or\\n fare_amount is null or extra is null or mta_tax is null or tip_amount is null or tolls_amount is null or improvement_surcharge is null or total_amount is null) ;\\n/***** 0 results  . no missing data ****************/\\n\\n \\n /*********Check the count of trips grouped by  passenger_count ***********/\\n select passenger_count,count(*) from rk_hive_test_db.nyc_taxi_data_part_clus_orc_rk \\nwhere vendorid is not null and (year(tpep_pickup_datetime) = 2017 and year(tpep_dropoff_datetime) = 2017)\\nand month(tpep_pickup_datetime) in (11,12) and  month(tpep_dropoff_datetime) in (11,12)\\n group by  passenger_count;\\n\\n /**************\\n1   0\\t108965\\n2\\t1\\t13250091\\n3\\t2\\t2815818\\n4\\t3\\t810689\\n5\\t4\\t398801\\n6\\t5\\t875733\\n7\\t6\\t530959\\n8\\t7\\t75\\n9\\t8\\t60\\n10\\t9\\t56\\n11\\t192\\t1\\n************************/\\n/********Here we can see one invalid passenger count 192 also for one trip **************/\\n\\n/****** Check the trip counts and average fares grouped by vendorid,passenger_count ***********************/\\n select vendorid,passenger_count,count(*),sum(fare_amount) from rk_hive_test_db.nyc_taxi_data_part_clus_orc_rk \\nwhere vendorid is not null and (year(tpep_pickup_datetime) = 2017 and year(tpep_dropoff_datetime) = 2017)\\nand month(tpep_pickup_datetime) in (11,12) and  month(tpep_dropoff_datetime) in (11,12)\\n group by  vendorid,passenger_count;\\n\\n/******* Here we are showing count for only passenger_count 0 and 192 to check if their is any amount for fare charged ***********/\\n2\\t192\\t1\\t6.5\\n1\\t0\\t\\t108745\\t1373328.3600013666\\n2\\t0\\t\\t220\\t11912.84000856243\\n**************************************************************/\\n\\n/************Check trip_distance related results grouped by vendorid ***************************/\\nselect vendorid,min(trip_distance),max(trip_distance),avg(trip_distance), variance(trip_distance) from rk_hive_test_db.nyc_taxi_data_part_clus_orc_rk \\nwhere vendorid is not null and (year(tpep_pickup_datetime) = 2017 and year(tpep_dropoff_datetime) = 2017) \\nand month(tpep_pickup_datetime) in (11,12) and  month(tpep_dropoff_datetime) in (11,12) group by vendorid;\\n/*******************************\\n1\\t0\\t702.5\\t2.773332343498796\\t12.848873972886192\\n2\\t0\\t687.219970703125\\t2.9456372376474365\\t14.32363363111327\\n***************************************/\\n\\n/************Check trip counts grouped by vendorid when trip_distance is 0 ***************************/\\nselect vendorid, count(*) from rk_hive_test_db.nyc_taxi_data_part_clus_orc_rk \\nwhere vendorid is not null and (year(tpep_pickup_datetime) = 2017 and year(tpep_dropoff_datetime) = 2017)\\nand month(tpep_pickup_datetime) in (11,12) and  month(tpep_dropoff_datetime) in (11,12)\\nand trip_distance = 0 group by vendorid;\\n/*******************************\\n1\\t68747\\n2\\t51252\\n***************************************/\\n\\n/************Check trip counts grouped by vendorid passenger_count and when trip_distance is 0 ***************************/\\nselect vendorid, count(*),avg(total_amount) from rk_hive_test_db.nyc_taxi_data_part_clus_orc_rk \\nwhere vendorid is not null and (year(tpep_pickup_datetime) = 2017 and year(tpep_dropoff_datetime) = 2017)\\nand month(tpep_pickup_datetime) in (11,12) and  month(tpep_dropoff_datetime) in (11,12)\\nand trip_distance = 0 and passenger_count =0 group by vendorid;\\n\\n/*******************************\\n1\\t1521\\t22.929559541367762\\n2\\t154\\t\\t50.9985068401733\\n***************************************/\\n\\n/************Check trip counts grouped by vendorid ratecodeid  ***************************/\\n select vendorid,ratecodeid,count(*),avg(fare_amount),avg(extra),avg(mta_tax),avg(tip_amount),avg(tolls_amount),avg(improvement_surcharge)\\n ,avg(total_amount) from rk_hive_test_db.nyc_taxi_data_part_clus_orc_rk \\nwhere vendorid is not null and (year(tpep_pickup_datetime) = 2017 and year(tpep_dropoff_datetime) = 2017)\\nand month(tpep_pickup_datetime) in (11,12) and  month(tpep_dropoff_datetime) in (11,12)\\n group by  vendorid,ratecodeid;\\n \\n/*****************************************************************************************************\\n1   1\\t[99]\\t172\\t53.844767576040226\\t0.04941860465116279\\t1.9648255726625754\\t1.398313961749853\\t0.6945348894873331\\t\\n2\\t1\\t[1]\\t8231740\\t11.807127846754613\\t0.3117672752054496\\t0.49991282159024253\\t1.669586656696165\\t0.18808172374333731\\t\\n3\\t1\\t[2]\\t167900\\t52.008505182305996\\t0.7893644431197019\\t0.499815366289458\\t7.042671404374567\\t4.365589268085818\\t\\n4\\t1\\t[3]\\t18209\\t64.05921137879568\\t0.22035806553126416\\t0\\t9.494640560981093\\t13.443019388069352\\t\\n5\\t1\\t[4]\\t4121\\t62.34545013239823\\t0.3593787915554477\\t0.49866537248240717\\t7.269386072017775\\t1.4924145159111588\\t\\n6\\t1\\t[5]\\t24385\\t54.021628051751186\\t0.0002050440844781628\\t0.001455812999794956\\t6.044001213114526\\t3.2277937466515847\\t\\n7\\t2\\t[99]\\t6\\t6.03333334128062\\t0.5\\t0\\t0\\t0.25\\t\\n8\\t1\\t[6]\\t132\\t38.208712137106694\\t0\\t0.49242424242424243\\t1.2603030362815568\\t0.17454546148126776\\t\\n9\\t2\\t[1]\\t10042574\\t11.924984285901713\\t0.3104288103820592\\t0.49910296901969553\\t1.706213792236551\\t0.20755594837560284\\t\\n10\\t2\\t[2]\\t236731\\t51.74068858746767\\t0.811905496119627\\t0.4975077197325234\\t7.577127450812835\\t4.3709367179666305\\t\\n11\\t2\\t[3]\\t21965\\t67.78005918506715\\t0.1794992032855403\\t0\\t10.954187109905462\\t13.61617710554\\t\\n12\\t2\\t[4]\\t5621\\t73.9428037715709\\t0.3577655221490838\\t0.49973314356876003\\t9.03184841825678\\t3.07527670001797\\t\\n13\\t2\\t[5]\\t37675\\t63.03761804874292\\t4.777704237625942e-05\\t0.28062375580623755\\t7.403481613748918\\t2.8902513818671234\\t\\n14\\t2\\t[6]\\t17\\t4.176470588235294\\t0.1882353004287271\\t0.5\\t0.8823529411764706\\t0\\n***************************************************************************************************************/\\n/**********************************************************\\nVendor 2 has higher fares for same ratecodeid compared to vendor 1\\nVendor 1 has more records 172 with invalid ratecodeid 99 compared to vendor 2 which has 6\\n****************************************************************************/\\n \\n /************Check trip counts grouped by vendorid , payment_type  ***************************/\\n select vendorid,payment_type,count(*),avg(fare_amount),avg(extra),avg(mta_tax),avg(tip_amount),avg(tolls_amount),avg(improvement_surcharge)\\n ,avg(total_amount) from rk_hive_test_db.nyc_taxi_data_part_clus_orc_rk \\nwhere vendorid is not null and (year(tpep_pickup_datetime) = 2017 and year(tpep_dropoff_datetime) = 2017)\\nand month(tpep_pickup_datetime) in (11,12) and  month(tpep_dropoff_datetime) in (11,12)\\n group by  vendorid,payment_type;\\n \\n/******************************************************************************************** \\nA numeric code signifying how the passenger paid for the trip.  1= Credit card 2= Cash 3= No charge 4= Dispute 5= Unknown 6= Voided trip \\n\\n1\\t1\\t[1]\\t5656789\\t13.21565668969973\\t0.32704141519200386\\t0.4974791140340064\\t2.7005109866651513\\t0.34657305356464885\\t0.299990996205118\\t17.387252226866092\\n2\\t1\\t[2]\\t2671182\\t11.802571685547457\\t0.30467568290082475\\t0.49814040376126684\\t9.901983305834854e-06\\t0.2194838686536838\\t0.29992139503584037\\t13.124802971933708\\n3\\t1\\t[3]\\t93993\\t21.60384285214098\\t0.34559594873238386\\t0.47708680433641704\\t0.003858691625595194\\t0.5322526242189952\\t0.2998021248363684\\t23.262439056168706\\n4\\t1\\t[4]\\t24695\\t14.773363028834101\\t0.327854221527044\\t0.4844681108980243\\t0.003753796321801701\\t0.5753674931282649\\t0.29998786371230696\\t16.46479446621143\\n5\\t2\\t[1]\\t6980979\\t13.700720461977241\\t0.3283775384508509\\t0.4977529655940807\\t2.7932857965253937\\t0.3970576240691896\\t0.2999043949555323\\t18.02451511788273\\n6\\t2\\t[2]\\t3354257\\t12.141315698248487\\t0.30609133408649275\\t0.4988223919634065\\t0\\t0.23040371287578945\\t0.2998498296239667\\t13.476568703701902\\n7\\t2\\t[3]\\t6519\\t-9.161796288393937\\t-0.37436723423838014\\t-0.48619420156465715\\t-0.1051649024867494\\t-0.029641050048210188\\t-0.2998619539310896\\t-10.460316054530992\\n8\\t2\\t[4]\\t2834\\t-8.530769230028906\\t-0.3514467184191955\\t-0.4827099505998589\\t-0.12236415034839614\\t-0.03585038895159434\\t-0.2997882970219022\\t-9.82705\\n\\nVendor 1 has more disputed (24695) and no charge records (93993)  compare to vendor 2 disputed (2834) and no charge records (6519) \\nWe don't have any records for payment type 5 and 6\\n********************************************************************************************************************/\\n\\n /************Check trip counts grouped by vendorid  to analyze the fare amount charged by each vendor  ***************************/\\n select vendorid,count(*),avg(fare_amount),avg(extra),avg(mta_tax),avg(tip_amount),avg(tolls_amount),avg(improvement_surcharge)\\n ,avg(total_amount), (avg(total_amount) - avg(fare_amount)) as fare_extra_difference from rk_hive_test_db.nyc_taxi_data_part_clus_orc_rk \\nwhere vendorid is not null and (year(tpep_pickup_datetime) = 2017 and year(tpep_dropoff_datetime) = 2017)\\nand month(tpep_pickup_datetime) in (11,12) and  month(tpep_dropoff_datetime) in (11,12)\\n group by  vendorid;\\n \\n/********************************************************************************************************\\n1\\t8446659\\t12.86667742019797\\t0.32017729613741536\\t0.49742327942867837\\t1.8086089048638374\\t0.3091173347343629\\t0.2999668745572539\\t16.101971101578386 3.2352936813804156\\n2\\t10344589\\t13.174581711268697\\t0.32052208164056\\t0.49721105401094234\\t1.8849310626590048\\t0.34263220821522833\\t0.29934444694185897\\t16.524252027113768 3.3496703158450707\\n\\nVendor 2 avergae fare is little bit higher than vendor 1 and also people pay bit extra for vendor 2 than vendor 1\\n********************************************************************************************************************/\\n\\n/*****************Summary of Identification of the data quality issues. **********************************\\nCommonn data quality issues :\\n1. Their are few null rows.\\n2. Data includes years other than 2017 \\n3. Data includes month other than Nov and Dec in year 2017\\n4. Invalid passenger count 192 found for one trip \\n5. Few trips are such that trip starts on one date and completes on next date causing change of dates for single trip\\n6. Trip with 0 trip distance or 0 passenger count but fares showing some amount.\\n \\n***************Vendor specific Issues ***********************************\\n\\n1.\\tVendor 1 has more disputed (24695) and no charge records (93993)  compare to vendor 2 disputed (2834) and no charge records (6519) \\n2.\\tVendor 1 has more records 172 with invalid ratecodeid 99 compared to vendor 2 which has 6\\n3.\\tVendor 1 has  67226 records with trip_distance = 0 and passenger_count <> 0 which is much higher compared to Vendor 2 which has 51101 records with trip_distance = 0 and passenger_count <> 0 \\n4.\\tVendor 1 has  1521 records with trip_distance = 0 and passenger_count =0 with some amount charged which is much higher compared to \\n5.\\tVendor 2 which has  154 records with trip_distance = 0 and passenger_count =0 with some amount charged\\n6.\\tVendor 1 has  108745 records with passenger_count =0 compared to vendor 2 220 records with passenger_count =0 \\n\\n****************************************************************************************/\\n\\n/***********************Conclude which vendor is doing a bad job in providing the records? *************************************/\\nBased upon above analysis, vendor 1 has more bad quality data compared to vendor 2 since vendor 1 records has more data quality issues.\\nVendor 2 is charging little bit higher fare than vendor 1 but data quality issues are less and vendor 2 seems to be more reliable.\\n/*************************************************************************************************************************************/\\n\\n/****************************Analysis-I *******************************************************/\\n\\n/****************************Compare the overall average fare for November and December.********************/\\n\\n select month(tpep_pickup_datetime),month(tpep_dropoff_datetime),count(*),avg(fare_amount) as avg_fare,avg(extra) as avg_extra,avg(mta_tax) as avg_mta_tax,avg(tip_amount)as avg_tip_amt,avg(tolls_amount) as avg_toll_amt,\\n avg(improvement_surcharge) as avg_impov_surchg,avg(total_amount) as avg_total_amt from rk_hive_test_db.nyc_taxi_data_part_clus_orc_rk \\nwhere vendorid is not null and (year(tpep_pickup_datetime) = 2017 and year(tpep_dropoff_datetime) = 2017)\\nand month(tpep_pickup_datetime) in (11,12) and  month(tpep_dropoff_datetime) in (11,12)\\n group by  month(tpep_pickup_datetime),month(tpep_dropoff_datetime);\\n \\n/***************************Result***************************************************************************************\\n_c1\\t_c2\\tavg_fare\\tavg_extra\\tavg_mta_tax\\tavg_tip_amt\\tavg_toll_amt\\tavg_impov_surchg\\tavg_total_amt\\n_c1\\t_c2\\tavg_fare\\tavg_extra\\tavg_mta_tax\\tavg_tip_amt\\tavg_toll_amt\\tavg_impov_surchg\\tavg_total_amt\\n11\\t11\\t9280573\\t13.13774634496685\\t0.31851288277194545\\t0.4973421845824935\\t1.887745591916017\\t0.34049085958847297\\t0.2996330571934986\\t16.48389305131759\\n11\\t12\\t4142\\t20.1494954121072\\t0.4734427812650893\\t0.49770642201834864\\t2.9114968661508485\\t0.5450893490859012\\t0.29971029679594496\\t24.87882412573613\\n12\\t12\\t9506325\\t12.93393897867545\\t0.32210797337618075\\t0.49727132935161117\\t1.813925691480482\\t0.314861186768894\\t0.29961556260463323\\t16.184828242180174\\n\\nHere we will assume that average fare where pick up and drop dates are not same will  be applicable for both Nov and Dec months , so will not include\\nin analysing average fare.\\nWe can see that average fare in December month 9506325 is slighly higher than Novemeber month\\n************************************************************************************************************************/\\n\\n/********Explore the \\u2018number of passengers per trip\\u2019 - how many trips are made by each level of \\u2018Passenger_count\\u2019? ***********\\n*********Do most people travel solo or with other people? ******************************************************/\\n\\n select passenger_count,count(*) as count from rk_hive_test_db.nyc_taxi_data_part_clus_orc_rk \\nwhere vendorid is not null and (year(tpep_pickup_datetime) = 2017 and year(tpep_dropoff_datetime) = 2017)\\nand month(tpep_pickup_datetime) in (11,12) and  month(tpep_dropoff_datetime) in (11,12)\\n group by  passenger_count;\\n \\n/***************************Result*************************************************************************************** \\npassenger_count\\t_c1\\npassenger_count\\t_c1\\n0\\t108965\\n1\\t13249946\\n2\\t2815794\\n3\\t810682\\n4\\t398798\\n5\\t875708\\n6\\t530955\\n7\\t75\\n8\\t60\\n9\\t56\\n192\\t1\\n\\nHere we can see the number of trips made by each level of 'Passenger_count' as above.\\nWe can conclude that ost people travel solo (13249946) .\\n************************************************************************************************************************/\\n\\n/********Which is the most preferred mode of payment?*******************************************************/\\n\\n select payment_type,count(*) as count,avg(fare_amount) as avg_fare,avg(extra) as avg_extra,avg(mta_tax) as avg_mta_tax,avg(tip_amount)as avg_tip_amt,avg(tolls_amount) as avg_toll_amt,\\n avg(improvement_surcharge) as avg_impov_surchg,avg(total_amount) from rk_hive_test_db.nyc_taxi_data_part_clus_orc_rk \\nwhere vendorid is not null and (year(tpep_pickup_datetime) = 2017 and year(tpep_dropoff_datetime) = 2017)\\nand month(tpep_pickup_datetime) in (11,12) and  month(tpep_dropoff_datetime) in (11,12)\\n group by  payment_type;\\n \\n /***************************Result***************************************************************************************\\npayment_type is a numeric code signifying how the passenger paid for the trip.  1= Credit card 2= Cash 3= No charge 4= Dispute 5= Unknown 6= Voided trip \\n \\npayment_type\\tcount\\tavg_fare\\tavg_extra\\tavg_mta_tax\\tavg_tip_amt\\tavg_toll_amt\\tavg_impov_surchg\\t_c8\\n[1]\\t12637627\\t13.483599509623382\\t0.32777838592638026\\t0.4976303605097154\\t2.7517616915175047\\t0.3744635011396812\\t0.2999431578905398\\t17.739273350946984\\n[2]\\t6025372\\t11.991170538549971\\t0.30546192002773404\\t0.4985200382648288\\t4.389770386101731e-06\\t0.22556430805889865\\t0.2998815544996766\\t13.32065049303949\\n[3]\\t100512\\t19.608447261991074\\t0.29890062887220387\\t0.41461039477866174\\t-0.0032123527275006985\\t0.49580936508030615\\t0.2609091555442933\\t21.075251053078016\\n[4]\\t27529\\t12.374296196707334\\t0.2579229176726489\\t0.38490101342681204\\t-0.009229539827834707\\t0.5124450666756396\\t0.23824331652495\\t13.758153914652882\\n\\nHere payment_type 1  (Credit card) is the most preferred mode of payment;\\n************************************************************************************************************************/\\n\\n/********What is the average tip paid? Compare the average tip with the 25th, 50th and 75th percentiles and comment whether the \\u2018average tip\\u2019 *************\\nis a representative statistic (of the central tendency) of \\u2018tip amount paid\\u2019.\\n**********************************************************************************************************************************/\\n\\n select avg(tip_amount)as avg_tip_amt from rk_hive_test_db.nyc_taxi_data_part_clus_orc_rk \\nwhere vendorid is not null and (year(tpep_pickup_datetime) = 2017 and year(tpep_dropoff_datetime) = 2017)\\nand month(tpep_pickup_datetime) in (11,12) and  month(tpep_dropoff_datetime) in (11,12);\\n/***************************Result***************************************************************************************\\navg_tip_amt\\n1.8506260079424872\\nAverage tip paid is 1.8506260079424872\\n************************************************************************************************************************/\\n\\n/********Checking distinct tip_amount to decide on B paramter in percentile_approx function **************************/\\nselect count(distinct tip_amount)as count from rk_hive_test_db.nyc_taxi_data_part_clus_orc_rk \\nwhere vendorid is not null and (year(tpep_pickup_datetime) = 2017 and year(tpep_dropoff_datetime) = 2017)\\nand month(tpep_pickup_datetime) in (11,12) and  month(tpep_dropoff_datetime) in (11,12);\\n\\n/**************************Result  4141 (B value should be more than this count)*********************************/\\n\\n/************* Get average tip along with the 25th, 50th and 75th percentiles tip amount ************************/\\nselect avg(tip_amount)as avg_tip_amt,percentile_approx(tip_amount, 0.25,4200) as tip_25_percentile, percentile_approx(tip_amount, 0.5,4200) as tip_50_percentile,\\npercentile_approx(tip_amount, 0.75,4200) as tip_75_percentile from rk_hive_test_db.nyc_taxi_data_part_clus_orc_rk \\nwhere vendorid is not null and (year(tpep_pickup_datetime) = 2017 and year(tpep_dropoff_datetime) = 2017)\\nand month(tpep_pickup_datetime) in (11,12) and  month(tpep_dropoff_datetime) in (11,12);\\n\\n/***************************Result***************************************************************************************\\navg_tip_amt\\t\\t\\ttip_25_percentile\\t\\ttip_50_percentile\\ttip_75_percentile\\n1.8506260079424872\\t-0.005955277471055294\\t1.351981399324019\\t2.448505088955382\\n\\nHere 'average tip' is not a representative statistic (of the central tendency) of \\u2018tip amount paid\\u2019 as the tip amount \\nmedian value is 1.351981399324019 which  is lower than the average tip amount 1.8506260079424872\\n************************************************************************************************************************/\\n\\n/********Explore the \\u2018Extra\\u2019 (charge) variable - what fraction of total trips have an extra charge is levied? ***************/\\n\\n select avg(tip_amount)as avg_tip_amt , avg(extra) as avg_extra,sum(tip_amount)as total_tip_amt , sum(extra) as total_extra, \\n( avg(extra)/avg(tip_amount))*100 as fraction_avg_extra_of_tip,( sum(extra)/sum(tip_amount))*100 as fraction_total_extra_of_tip from rk_hive_test_db.nyc_taxi_data_part_clus_orc_rk \\nwhere vendorid is not null and (year(tpep_pickup_datetime) = 2017 and year(tpep_dropoff_datetime) = 2017)\\nand month(tpep_pickup_datetime) in (11,12) and  month(tpep_dropoff_datetime) in (11,12);\\n\\n/***************************Result***************************************************************************************\\navg_tip_amt\\t\\t\\tavg_extra\\t\\t\\ttotal_tip_amt\\t\\ttotal_extra\\t\\t fraction_avg_extra_of_tip\\tfraction_total_extra_of_tip\\n1.8506260079424872\\t0.3203657775200736\\t34775187.340287596\\t6020006.140010804\\t17.31121124123042\\t\\t17.31121124123042\\n\\nHere average or total tip amount is much higher than average or total extra amount.\\nAlso Extra amount is around 17.3% of total tip amount generally.\\n************************************************************************************************************************/\\n\\n/***************************Analysis-II ************************************************************/\\n\\n/**********What is the correlation between the number of passengers and tip paid? Do multiple travellers pay more compared to solo travellers? **********/\\n\\n/************* Get the average tip amount for each level of passenger_count **************************/\\n select passenger_count,avg(tip_amount)as avg_tip_amt from rk_hive_test_db.nyc_taxi_data_part_clus_orc_rk \\nwhere vendorid is not null and (year(tpep_pickup_datetime) = 2017 and year(tpep_dropoff_datetime) = 2017)\\nand month(tpep_pickup_datetime) in (11,12) and  month(tpep_dropoff_datetime) in (11,12)\\n group by  passenger_count;\\n \\n/***************************Result***************************************************************************************\\n  passenger_count\\tavg_tip_amt\\n\\n1\\t0\\t1.7632504947897043\\n2\\t1\\t1.8579490524419435\\n3\\t2\\t1.8641309281270322\\n4\\t3\\t1.7727101509516048\\n5\\t4\\t1.631771223140227\\n6\\t5\\t1.8734892117975077\\n7\\t6\\t1.8583563585532976\\n8\\t7\\t3.630133365790049\\n9\\t8\\t8.546833296616873\\n10\\t9\\t6.2632143050432205\\n11\\t192\\t1.2400000095367432\\n\\nWe don't see any clear trend where average tip amount is increasing with passenger count.\\nBut when passenger count is more than 6 then we see that average tip amount is much higher.\\n\\n************************************************************************************************************************/\\n\\n/*************** Get the corelation between passenger_count and  tip_amount *********************/\\nselect corr(passenger_count,tip_amount)\\nfrom rk_hive_test_db.nyc_taxi_data_part_clus_orc_rk \\nwhere vendorid is not null and (year(tpep_pickup_datetime) = 2017 and year(tpep_dropoff_datetime) = 2017)\\nand month(tpep_pickup_datetime) in (11,12) and  month(tpep_dropoff_datetime) in (11,12);\\n\\n/***************************Result***************************************************************************************\\n-0.0037971068726033474\\n\\nCorrelation tells that both are not much linearly related . It has a sligh negative corelation .\\n************************************************************************************************************************/\\n\\n\\n/***************Create five buckets of \\u2018tip paid\\u2019: [0-5), [5-10), [10-15) , [15-20) and >=20.  ************************/\\n/***************Calculate the percentage share of each bucket (i.e. the fraction of trips falling in each bucket).*****/\\n\\n/*********** Get total tip amount ***************************************/\\nselect sum(tip_amount) as total_tip_amount_in_bucket\\n   from rk_hive_test_db.nyc_taxi_data_part_clus_orc_rk \\n\\twhere vendorid is not null and (year(tpep_pickup_datetime) = 2017 and year(tpep_dropoff_datetime) = 2017)\\n\\tand month(tpep_pickup_datetime) in (11,12) and  month(tpep_dropoff_datetime) in (11,12);\\n\\n/***************************Result***************************************************************************************\\n34775187.340287596\\n************************************************************************************************************************/\\n\\t\\n/*********** Get  tip amount for bucket [0-5) and faction of total tip amount***************************************/\\nselect sum(tip_amount)  as tip_amount_1_5_bucket,(sum(tip_amount)/(34775187))*100 as tip_1_5_bucket_fraction\\n   from rk_hive_test_db.nyc_taxi_data_part_clus_orc_rk \\n\\twhere vendorid is not null and (year(tpep_pickup_datetime) = 2017 and year(tpep_dropoff_datetime) = 2017)\\n\\tand month(tpep_pickup_datetime) in (11,12) and  month(tpep_dropoff_datetime) in (11,12)\\n   and tip_amount > 0 and tip_amount <= 5  ;\\n\\n /***************************Result***************************************************************************************\\ntip_amount_1_5_bucket\\ttip_1_5_bucket_fraction\\n22998149.883710835\\t\\t66.13379213089733\\n************************************************************************************************************************/\\n\\n/*********** Get  tip amount for bucket [5-10) and faction of total tip amount***************************************/\\nselect sum(tip_amount)  as tip_amount_5_10_bucket,(sum(tip_amount)/(34775187))*100 as tip_5_10_bucket_fraction\\n   from rk_hive_test_db.nyc_taxi_data_part_clus_orc_rk \\n\\twhere vendorid is not null and (year(tpep_pickup_datetime) = 2017 and year(tpep_dropoff_datetime) = 2017)\\n\\tand month(tpep_pickup_datetime) in (11,12) and  month(tpep_dropoff_datetime) in (11,12)\\n   and tip_amount > 5 and tip_amount <= 10  ;\\n   \\n /***************************Result***************************************************************************************   \\ntip_amount_5_10_bucket\\ttip_5_10_bucket_fraction   \\n6814925.98917532\\t19.59709372425609\\n************************************************************************************************************************/\\n\\n/*********** Get  tip amount for bucket [10-15) and faction of total tip amount***************************************/\\nselect sum(tip_amount)  as tip_amount_10_15_bucket,(sum(tip_amount)/(34775187))*100 as tip_10_15_bucket_fraction\\n   from rk_hive_test_db.nyc_taxi_data_part_clus_orc_rk \\n\\twhere vendorid is not null and (year(tpep_pickup_datetime) = 2017 and year(tpep_dropoff_datetime) = 2017)\\n\\tand month(tpep_pickup_datetime) in (11,12) and  month(tpep_dropoff_datetime) in (11,12)\\n   and tip_amount > 10 and tip_amount <= 15  ;\\n   \\n/***************************Result***************************************************************************************   \\n tip_amount_10_15_bucket\\ttip_10_15_bucket_fraction   \\n3735927.5992069244\\t10.743084139869396\\n************************************************************************************************************************/\\n\\n/*********** Get  tip amount for bucket [15-20) and faction of total tip amount***************************************/\\nselect sum(tip_amount)  as tip_amount_15_20_bucket,(sum(tip_amount)/(34775187))*100 as tip_15_20_bucket_fraction\\n   from rk_hive_test_db.nyc_taxi_data_part_clus_orc_rk \\n\\twhere vendorid is not null and (year(tpep_pickup_datetime) = 2017 and year(tpep_dropoff_datetime) = 2017)\\n\\tand month(tpep_pickup_datetime) in (11,12) and  month(tpep_dropoff_datetime) in (11,12)\\n   and tip_amount > 15 and tip_amount <= 20  ;\\n   \\n/***************************Result***************************************************************************************    \\n tip_amount_15_20_bucket\\ttip_15_20_bucket_fraction   \\n 730931.1184225082\\t2.1018754505116197\\n ************************************************************************************************************************/\\n \\n/*********** Get  tip amount for bucket 20+ and faction of total tip amount***************************************/\\nselect sum(tip_amount)  as tip_amount_20_plus__bucket,(sum(tip_amount)/(34775187))*100 as tip_20__plus_bucket_fraction\\n   from rk_hive_test_db.nyc_taxi_data_part_clus_orc_rk \\n\\twhere vendorid is not null and (year(tpep_pickup_datetime) = 2017 and year(tpep_dropoff_datetime) = 2017)\\n\\tand month(tpep_pickup_datetime) in (11,12) and  month(tpep_dropoff_datetime) in (11,12)\\n   and tip_amount > 20   ;   \\n   \\n/***************************Result***************************************************************************************    \\n    tip_amount_10_15_bucket\\ttip_10_15_bucket_fraction   \\n   496285.099773407\\t\\t\\t1.4271241726849866\\n ************************************************************************************************************************/\\n   \\n   \\n/***********Which month has a greater average \\u2018speed\\u2019 - November or December? Note that the variable \\u2018speed\\u2019 will have to be derived from other metrics.**********/\\n \\n /*** Get the average speed grouped by both pick up and drop month ***************************/\\n select month(tpep_pickup_datetime),month(tpep_dropoff_datetime), avg(trip_distance/((unix_timestamp(tpep_dropoff_datetime) - unix_timestamp(tpep_pickup_datetime))/3600)) as avg_speed from rk_hive_test_db.nyc_taxi_data_part_clus_orc_rk \\nwhere vendorid is not null and (year(tpep_pickup_datetime) = 2017 and year(tpep_dropoff_datetime) = 2017)\\nand month(tpep_pickup_datetime) in (11,12) and  month(tpep_dropoff_datetime) in (11,12)\\n group by  month(tpep_pickup_datetime),month(tpep_dropoff_datetime);\\n \\n/***************************Result***************************************************************************************  \\n11\\t11\\t12.758605943227732\\n11\\t12\\t12.449429489227986\\n12\\t12\\t12.705483616452682\\n\\nHere we will assume that trips where date changes will be applicable for both Nov and Dec months and hence won't consider it.\\nNovember month has greater average spped 12.758605943227732 compared to December month 12.705483616452682 .\\n ************************************************************************************************************************/\\n \\n/************Analyse the average speed of the most happening days of the year i.e. 31st December (New year\\u2019s eve) and 25th December (Christmas Eve) \\n/******and compare it with the overall average.  ************************/\\n\\n/*** Get the overall average speed ***************************/\\n select avg(trip_distance/((unix_timestamp(tpep_dropoff_datetime) - unix_timestamp(tpep_pickup_datetime))/3600)) as overall_avg_speed from rk_hive_test_db.nyc_taxi_data_part_clus_orc_rk \\nwhere vendorid is not null and (year(tpep_pickup_datetime) = 2017 and year(tpep_dropoff_datetime) = 2017)\\nand month(tpep_pickup_datetime) in (11,12) and  month(tpep_dropoff_datetime) in (11,12);\\n\\n/***************************Result*************************************************************************************** \\noverall_avg_speed\\n12.731662670638789\\n************************************************************************************************************************/\\n\\n/*** Get the  average speed for 25th December ***************************/\\n select day(tpep_pickup_datetime), day(tpep_dropoff_datetime),avg(trip_distance/((unix_timestamp(tpep_dropoff_datetime) - unix_timestamp(tpep_pickup_datetime))/3600)) as overall_avg_speed from rk_hive_test_db.nyc_taxi_data_part_clus_orc_rk \\nwhere vendorid is not null and (year(tpep_pickup_datetime) = 2017 and year(tpep_dropoff_datetime) = 2017)\\nand month(tpep_pickup_datetime) = 12 and  month(tpep_dropoff_datetime) = 12 and day(tpep_pickup_datetime) = 25 and  day(tpep_dropoff_datetime) in (25,26)\\ngroup by day(tpep_pickup_datetime), day(tpep_dropoff_datetime);\\n\\n/***************************Result*************************************************************************************** \\n25\\t25\\t16.804706410414326\\n25\\t26\\t13.000195784866202\\n\\nHere we can see that average speed is less when date changes . \\nAverage spped on 25th Dec in year 2017 is higher compared to overall_avg_speed 12.731662670638789\\n************************************************************************************************************************/\\n\\n/*** Get the  average speed for 31st December ***************************/\\n select avg(trip_distance/((unix_timestamp(tpep_dropoff_datetime) - unix_timestamp(tpep_pickup_datetime))/3600)) as overall_avg_speed from rk_hive_test_db.nyc_taxi_data_part_clus_orc_rk \\nwhere vendorid is not null and (year(tpep_pickup_datetime) = 2017 and year(tpep_dropoff_datetime) = 2017)\\n\\n/***************************Result*************************************************************************************** \\n14.057195690169191\\nAverage spped on 31st Dec in year 2017 is higher compared to overall_avg_speed 12.731662670638789\\n************************************************************************************************************************/\\n\\n\\n/**********************************End of Data Analysis *****************************************************************************/\\n\", \"aceErrorsHolder\": [], \"compatibilityTargetPlatform\": \"hive\", \"type\": \"hive\", \"variables\": [], \"status\": \"ready\", \"currentQueryTab\": \"queryHistory\", \"jobs\": [], \"suggestion\": \"\", \"chartMapType\": \"marker\", \"complexityCheckRunning\": false, \"statementType\": \"text\", \"queriesFilter\": \"\", \"aceWarningsHolder\": [], \"resultsKlass\": \"results hive\", \"variableNames\": [], \"queriesCurrentPage\": 1, \"isCanceling\": false, \"queriesTotalPages\": 1, \"compatibilitySourcePlatform\": \"hive\", \"formatEnabled\": true, \"progress\": 0, \"dbSelectionVisible\": false, \"chartType\": \"bars\", \"showGrid\": true, \"properties\": {\"files\": [], \"functions\": [], \"arguments\": [], \"settings\": []}, \"isFetchingData\": false, \"aceErrors\": [], \"chartTimelineType\": \"bar\", \"compatibilityTargetPlatforms\": [{\"name\": \"Impala\", \"value\": \"impala\"}, {\"name\": \"Hive\", \"value\": \"hive\"}], \"chartLimit\": null, \"name\": \"\", \"database\": \"rk_hive_test_db\", \"statementTypes\": [\"text\", \"file\", \"document\"], \"hasSuggestion\": null, \"externalStatementLoaded\": false, \"chartScatterSize\": null, \"executingBlockingOperation\": null, \"showOptimizer\": false, \"associatedDocumentUuid\": null, \"isBatchable\": true, \"chartYSingle\": null, \"isSqlDialect\": true, \"statementPath\": \"\", \"is_redacted\": false, \"settingsVisible\": false, \"checkStatusTimeout\": null, \"isLoading\": false}], \"name\": \"HIVE_ASSIGNMENT_RAJU\", \"coordinatorUuid\": null, \"uuid\": \"0fa9a284-1e86-0a01-573e-66256e7fc40e\", \"creatingSessionLocks\": [], \"onSuccessUrl\": null, \"directoryUuid\": \"\", \"historyFilterVisible\": false, \"loadingScheduler\": false, \"retryModalConfirm\": null, \"viewSchedulerId\": \"\", \"selectedSnippet\": \"hive\", \"type\": \"notebook\", \"isSaved\": true, \"unloaded\": false, \"dependentsCoordinator\": []}", 
    "is_trashed": false, 
    "name": "HIVE_ASSIGNMENT_RAJU"
  }
}
]
